Index: ms-deal/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n    <modelVersion>4.0.0</modelVersion>\r\n    <parent>\r\n        <groupId>org.springframework.boot</groupId>\r\n        <artifactId>spring-boot-starter-parent</artifactId>\r\n        <version>2.7.6</version>\r\n        <relativePath/>\r\n    </parent>\r\n    <groupId>ru.alex</groupId>\r\n    <artifactId>ms-deal</artifactId>\r\n    <version>1.0-SNAPSHOT</version>\r\n    <name>ms-deal</name>\r\n    <description>ms-deal</description>\r\n    <properties>\r\n        <postgresql.version>42.7.3</postgresql.version>\r\n        <java.version>17</java.version>\r\n        <flyway.version>8.5.13</flyway.version>\r\n        <springdoc.version>1.8.0</springdoc.version>\r\n        <hibernate-types.version>2.2.2</hibernate-types.version>\r\n        <mapstruct.version>1.5.5.Final</mapstruct.version>\r\n        <lombok.version>1.18.24</lombok.version>\r\n        <openfeign.version>3.1.8</openfeign.version>\r\n        <testcontainer-postresql.version>1.19.8</testcontainer-postresql.version>\r\n        <jackson-datatype.version>2.10.1</jackson-datatype.version>\r\n    </properties>\r\n\r\n    <dependencies>\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-data-jpa</artifactId>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-validation</artifactId>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-web</artifactId>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>org.springframework.cloud</groupId>\r\n            <artifactId>spring-cloud-starter-openfeign</artifactId>\r\n            <version>${openfeign.version}</version>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>org.postgresql</groupId>\r\n            <artifactId>postgresql</artifactId>\r\n            <version>${postgresql.version}</version>\r\n            <scope>runtime</scope>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>org.projectlombok</groupId>\r\n            <artifactId>lombok</artifactId>\r\n            <optional>true</optional>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-test</artifactId>\r\n            <scope>test</scope>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>org.springdoc</groupId>\r\n            <artifactId>springdoc-openapi-ui</artifactId>\r\n            <version>${springdoc.version}</version>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>org.testcontainers</groupId>\r\n            <artifactId>postgresql</artifactId>\r\n            <version>${testcontainer-postresql.version}</version>\r\n            <scope>test</scope>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>org.flywaydb</groupId>\r\n            <artifactId>flyway-maven-plugin</artifactId>\r\n            <version>${flyway.version}</version>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>org.mapstruct</groupId>\r\n            <artifactId>mapstruct</artifactId>\r\n            <version>${mapstruct.version}</version>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>com.vladmihalcea</groupId>\r\n            <artifactId>hibernate-types-52</artifactId>\r\n            <version>${hibernate-types.version}</version>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>com.fasterxml.jackson.datatype</groupId>\r\n            <artifactId>jackson-datatype-jsr310</artifactId>\r\n            <version>${jackson-datatype.version}</version>\r\n        </dependency>\r\n\r\n    </dependencies>\r\n\r\n    <build>\r\n        <plugins>\r\n            <plugin>\r\n                <groupId>org.springframework.boot</groupId>\r\n                <artifactId>spring-boot-maven-plugin</artifactId>\r\n                <configuration>\r\n                    <excludes>\r\n                        <exclude>\r\n                            <groupId>org.projectlombok</groupId>\r\n                            <artifactId>lombok</artifactId>\r\n                        </exclude>\r\n                    </excludes>\r\n                </configuration>\r\n            </plugin>\r\n            <plugin>\r\n                <groupId>org.apache.maven.plugins</groupId>\r\n                <artifactId>maven-compiler-plugin</artifactId>\r\n                <configuration>\r\n                    <source>${java.version}</source>\r\n                    <target>${java.version}</target>\r\n                    <annotationProcessorPaths>\r\n                        <path>\r\n                            <groupId>org.mapstruct</groupId>\r\n                            <artifactId>mapstruct-processor</artifactId>\r\n                            <version>${mapstruct.version}</version>\r\n                        </path>\r\n                        <path>\r\n                            <groupId>org.projectlombok</groupId>\r\n                            <artifactId>lombok</artifactId>\r\n                            <version>${lombok.version}</version>\r\n                        </path>\r\n                        <path>\r\n                            <groupId>org.projectlombok</groupId>\r\n                            <artifactId>lombok-mapstruct-binding</artifactId>\r\n                            <version>0.2.0</version>\r\n                        </path>\r\n                    </annotationProcessorPaths>\r\n                </configuration>\r\n            </plugin>\r\n        </plugins>\r\n    </build>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ms-deal/pom.xml b/ms-deal/pom.xml
--- a/ms-deal/pom.xml	(revision 58edfa4b19a76323309cf2b18dabee45d7db1ddd)
+++ b/ms-deal/pom.xml	(date 1720066902487)
@@ -80,6 +80,11 @@
             <scope>test</scope>
         </dependency>
 
+        <dependency>
+            <groupId>org.springframework.kafka</groupId>
+            <artifactId>spring-kafka</artifactId>
+        </dependency>
+
         <dependency>
             <groupId>org.flywaydb</groupId>
             <artifactId>flyway-maven-plugin</artifactId>
Index: ms-dossier/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ms-dossier/.gitignore b/ms-dossier/.gitignore
new file mode 100644
--- /dev/null	(date 1720006809834)
+++ b/ms-dossier/.gitignore	(date 1720006809834)
@@ -0,0 +1,33 @@
+HELP.md
+target/
+!.mvn/wrapper/maven-wrapper.jar
+!**/src/main/**/target/
+!**/src/test/**/target/
+
+### STS ###
+.apt_generated
+.classpath
+.factorypath
+.project
+.settings
+.springBeans
+.sts4-cache
+
+### IntelliJ IDEA ###
+.idea
+*.iws
+*.iml
+*.ipr
+
+### NetBeans ###
+/nbproject/private/
+/nbbuild/
+/dist/
+/nbdist/
+/.nb-gradle/
+build/
+!**/src/main/**/build/
+!**/src/test/**/build/
+
+### VS Code ###
+.vscode/
Index: ms-dossier/mvnw.cmd
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ms-dossier/mvnw.cmd b/ms-dossier/mvnw.cmd
new file mode 100644
--- /dev/null	(date 1720006809832)
+++ b/ms-dossier/mvnw.cmd	(date 1720006809832)
@@ -0,0 +1,149 @@
+<# : batch portion
+@REM ----------------------------------------------------------------------------
+@REM Licensed to the Apache Software Foundation (ASF) under one
+@REM or more contributor license agreements.  See the NOTICE file
+@REM distributed with this work for additional information
+@REM regarding copyright ownership.  The ASF licenses this file
+@REM to you under the Apache License, Version 2.0 (the
+@REM "License"); you may not use this file except in compliance
+@REM with the License.  You may obtain a copy of the License at
+@REM
+@REM    https://www.apache.org/licenses/LICENSE-2.0
+@REM
+@REM Unless required by applicable law or agreed to in writing,
+@REM software distributed under the License is distributed on an
+@REM "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+@REM KIND, either express or implied.  See the License for the
+@REM specific language governing permissions and limitations
+@REM under the License.
+@REM ----------------------------------------------------------------------------
+
+@REM ----------------------------------------------------------------------------
+@REM Apache Maven Wrapper startup batch script, version 3.3.2
+@REM
+@REM Optional ENV vars
+@REM   MVNW_REPOURL - repo url base for downloading maven distribution
+@REM   MVNW_USERNAME/MVNW_PASSWORD - user and password for downloading maven
+@REM   MVNW_VERBOSE - true: enable verbose log; others: silence the output
+@REM ----------------------------------------------------------------------------
+
+@IF "%__MVNW_ARG0_NAME__%"=="" (SET __MVNW_ARG0_NAME__=%~nx0)
+@SET __MVNW_CMD__=
+@SET __MVNW_ERROR__=
+@SET __MVNW_PSMODULEP_SAVE=%PSModulePath%
+@SET PSModulePath=
+@FOR /F "usebackq tokens=1* delims==" %%A IN (`powershell -noprofile "& {$scriptDir='%~dp0'; $script='%__MVNW_ARG0_NAME__%'; icm -ScriptBlock ([Scriptblock]::Create((Get-Content -Raw '%~f0'))) -NoNewScope}"`) DO @(
+  IF "%%A"=="MVN_CMD" (set __MVNW_CMD__=%%B) ELSE IF "%%B"=="" (echo %%A) ELSE (echo %%A=%%B)
+)
+@SET PSModulePath=%__MVNW_PSMODULEP_SAVE%
+@SET __MVNW_PSMODULEP_SAVE=
+@SET __MVNW_ARG0_NAME__=
+@SET MVNW_USERNAME=
+@SET MVNW_PASSWORD=
+@IF NOT "%__MVNW_CMD__%"=="" (%__MVNW_CMD__% %*)
+@echo Cannot start maven from wrapper >&2 && exit /b 1
+@GOTO :EOF
+: end batch / begin powershell #>
+
+$ErrorActionPreference = "Stop"
+if ($env:MVNW_VERBOSE -eq "true") {
+  $VerbosePreference = "Continue"
+}
+
+# calculate distributionUrl, requires .mvn/wrapper/maven-wrapper.properties
+$distributionUrl = (Get-Content -Raw "$scriptDir/.mvn/wrapper/maven-wrapper.properties" | ConvertFrom-StringData).distributionUrl
+if (!$distributionUrl) {
+  Write-Error "cannot read distributionUrl property in $scriptDir/.mvn/wrapper/maven-wrapper.properties"
+}
+
+switch -wildcard -casesensitive ( $($distributionUrl -replace '^.*/','') ) {
+  "maven-mvnd-*" {
+    $USE_MVND = $true
+    $distributionUrl = $distributionUrl -replace '-bin\.[^.]*$',"-windows-amd64.zip"
+    $MVN_CMD = "mvnd.cmd"
+    break
+  }
+  default {
+    $USE_MVND = $false
+    $MVN_CMD = $script -replace '^mvnw','mvn'
+    break
+  }
+}
+
+# apply MVNW_REPOURL and calculate MAVEN_HOME
+# maven home pattern: ~/.m2/wrapper/dists/{apache-maven-<version>,maven-mvnd-<version>-<platform>}/<hash>
+if ($env:MVNW_REPOURL) {
+  $MVNW_REPO_PATTERN = if ($USE_MVND) { "/org/apache/maven/" } else { "/maven/mvnd/" }
+  $distributionUrl = "$env:MVNW_REPOURL$MVNW_REPO_PATTERN$($distributionUrl -replace '^.*'+$MVNW_REPO_PATTERN,'')"
+}
+$distributionUrlName = $distributionUrl -replace '^.*/',''
+$distributionUrlNameMain = $distributionUrlName -replace '\.[^.]*$','' -replace '-bin$',''
+$MAVEN_HOME_PARENT = "$HOME/.m2/wrapper/dists/$distributionUrlNameMain"
+if ($env:MAVEN_USER_HOME) {
+  $MAVEN_HOME_PARENT = "$env:MAVEN_USER_HOME/wrapper/dists/$distributionUrlNameMain"
+}
+$MAVEN_HOME_NAME = ([System.Security.Cryptography.MD5]::Create().ComputeHash([byte[]][char[]]$distributionUrl) | ForEach-Object {$_.ToString("x2")}) -join ''
+$MAVEN_HOME = "$MAVEN_HOME_PARENT/$MAVEN_HOME_NAME"
+
+if (Test-Path -Path "$MAVEN_HOME" -PathType Container) {
+  Write-Verbose "found existing MAVEN_HOME at $MAVEN_HOME"
+  Write-Output "MVN_CMD=$MAVEN_HOME/bin/$MVN_CMD"
+  exit $?
+}
+
+if (! $distributionUrlNameMain -or ($distributionUrlName -eq $distributionUrlNameMain)) {
+  Write-Error "distributionUrl is not valid, must end with *-bin.zip, but found $distributionUrl"
+}
+
+# prepare tmp dir
+$TMP_DOWNLOAD_DIR_HOLDER = New-TemporaryFile
+$TMP_DOWNLOAD_DIR = New-Item -Itemtype Directory -Path "$TMP_DOWNLOAD_DIR_HOLDER.dir"
+$TMP_DOWNLOAD_DIR_HOLDER.Delete() | Out-Null
+trap {
+  if ($TMP_DOWNLOAD_DIR.Exists) {
+    try { Remove-Item $TMP_DOWNLOAD_DIR -Recurse -Force | Out-Null }
+    catch { Write-Warning "Cannot remove $TMP_DOWNLOAD_DIR" }
+  }
+}
+
+New-Item -Itemtype Directory -Path "$MAVEN_HOME_PARENT" -Force | Out-Null
+
+# Download and Install Apache Maven
+Write-Verbose "Couldn't find MAVEN_HOME, downloading and installing it ..."
+Write-Verbose "Downloading from: $distributionUrl"
+Write-Verbose "Downloading to: $TMP_DOWNLOAD_DIR/$distributionUrlName"
+
+$webclient = New-Object System.Net.WebClient
+if ($env:MVNW_USERNAME -and $env:MVNW_PASSWORD) {
+  $webclient.Credentials = New-Object System.Net.NetworkCredential($env:MVNW_USERNAME, $env:MVNW_PASSWORD)
+}
+[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
+$webclient.DownloadFile($distributionUrl, "$TMP_DOWNLOAD_DIR/$distributionUrlName") | Out-Null
+
+# If specified, validate the SHA-256 sum of the Maven distribution zip file
+$distributionSha256Sum = (Get-Content -Raw "$scriptDir/.mvn/wrapper/maven-wrapper.properties" | ConvertFrom-StringData).distributionSha256Sum
+if ($distributionSha256Sum) {
+  if ($USE_MVND) {
+    Write-Error "Checksum validation is not supported for maven-mvnd. `nPlease disable validation by removing 'distributionSha256Sum' from your maven-wrapper.properties."
+  }
+  Import-Module $PSHOME\Modules\Microsoft.PowerShell.Utility -Function Get-FileHash
+  if ((Get-FileHash "$TMP_DOWNLOAD_DIR/$distributionUrlName" -Algorithm SHA256).Hash.ToLower() -ne $distributionSha256Sum) {
+    Write-Error "Error: Failed to validate Maven distribution SHA-256, your Maven distribution might be compromised. If you updated your Maven version, you need to update the specified distributionSha256Sum property."
+  }
+}
+
+# unzip and move
+Expand-Archive "$TMP_DOWNLOAD_DIR/$distributionUrlName" -DestinationPath "$TMP_DOWNLOAD_DIR" | Out-Null
+Rename-Item -Path "$TMP_DOWNLOAD_DIR/$distributionUrlNameMain" -NewName $MAVEN_HOME_NAME | Out-Null
+try {
+  Move-Item -Path "$TMP_DOWNLOAD_DIR/$MAVEN_HOME_NAME" -Destination $MAVEN_HOME_PARENT | Out-Null
+} catch {
+  if (! (Test-Path -Path "$MAVEN_HOME" -PathType Container)) {
+    Write-Error "fail to move MAVEN_HOME"
+  }
+} finally {
+  try { Remove-Item $TMP_DOWNLOAD_DIR -Recurse -Force | Out-Null }
+  catch { Write-Warning "Cannot remove $TMP_DOWNLOAD_DIR" }
+}
+
+Write-Output "MVN_CMD=$MAVEN_HOME/bin/$MVN_CMD"
Index: ms-dossier/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ms-dossier/pom.xml b/ms-dossier/pom.xml
new file mode 100644
--- /dev/null	(date 1720066799520)
+++ b/ms-dossier/pom.xml	(date 1720066799520)
@@ -0,0 +1,69 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
+	<modelVersion>4.0.0</modelVersion>
+	<parent>
+		<groupId>org.springframework.boot</groupId>
+		<artifactId>spring-boot-starter-parent</artifactId>
+		<version>3.3.1</version>
+		<relativePath/>
+	</parent>
+	<groupId>ru.alex</groupId>
+	<artifactId>ms-dossier</artifactId>
+	<version>0.0.1-SNAPSHOT</version>
+	<name>ms-dossier</name>
+	<description>ms-dossier</description>
+
+	<properties>
+		<java.version>17</java.version>
+	</properties>
+	<dependencies>
+		<dependency>
+			<groupId>org.springframework.boot</groupId>
+			<artifactId>spring-boot-starter-mail</artifactId>
+		</dependency>
+		<dependency>
+			<groupId>org.springframework.boot</groupId>
+			<artifactId>spring-boot-starter-web</artifactId>
+		</dependency>
+		<dependency>
+			<groupId>org.springframework.kafka</groupId>
+			<artifactId>spring-kafka</artifactId>
+		</dependency>
+
+		<dependency>
+			<groupId>org.projectlombok</groupId>
+			<artifactId>lombok</artifactId>
+			<optional>true</optional>
+		</dependency>
+		<dependency>
+			<groupId>org.springframework.boot</groupId>
+			<artifactId>spring-boot-starter-test</artifactId>
+			<scope>test</scope>
+		</dependency>
+
+		<dependency>
+			<groupId>org.springframework.kafka</groupId>
+			<artifactId>spring-kafka-test</artifactId>
+			<scope>test</scope>
+		</dependency>
+	</dependencies>
+
+	<build>
+		<plugins>
+			<plugin>
+				<groupId>org.springframework.boot</groupId>
+				<artifactId>spring-boot-maven-plugin</artifactId>
+				<configuration>
+					<excludes>
+						<exclude>
+							<groupId>org.projectlombok</groupId>
+							<artifactId>lombok</artifactId>
+						</exclude>
+					</excludes>
+				</configuration>
+			</plugin>
+		</plugins>
+	</build>
+
+</project>
Index: ms-dossier/.mvn/wrapper/maven-wrapper.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/ms-dossier/.mvn/wrapper/maven-wrapper.properties b/ms-dossier/.mvn/wrapper/maven-wrapper.properties
new file mode 100644
--- /dev/null	(date 1720006809833)
+++ b/ms-dossier/.mvn/wrapper/maven-wrapper.properties	(date 1720006809833)
@@ -0,0 +1,19 @@
+# Licensed to the Apache Software Foundation (ASF) under one
+# or more contributor license agreements.  See the NOTICE file
+# distributed with this work for additional information
+# regarding copyright ownership.  The ASF licenses this file
+# to you under the Apache License, Version 2.0 (the
+# "License"); you may not use this file except in compliance
+# with the License.  You may obtain a copy of the License at
+#
+#   https://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing,
+# software distributed under the License is distributed on an
+# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+# KIND, either express or implied.  See the License for the
+# specific language governing permissions and limitations
+# under the License.
+wrapperVersion=3.3.2
+distributionType=only-script
+distributionUrl=https://repo.maven.apache.org/maven2/org/apache/maven/apache-maven/3.9.7/apache-maven-3.9.7-bin.zip
Index: ms-deal/src/main/java/ru/alex/msdeal/entity/constant/StatementStatus.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package ru.alex.msdeal.entity.constant;\r\n\r\npublic enum StatementStatus {\r\n    PREAPPROVAL(\"Предварительное одобрение\"),\r\n    APPROVED(\"Одобрено\"),\r\n    CC_DENIED(\"Отказ в выдаче кредита\"),\r\n    CC_APPROVED(\"Выдача кредита одобрена\"),\r\n    PREPARE_DOCUMENTS(\"Подготовка документов\"),\r\n    DOCUMENT_CREATED(\"Создание документов\"),\r\n    CLIENT_DENIED(\"Отказ клиенту\"),\r\n    DOCUMENT_SIGNED(\"Документы подписаны\"),\r\n    CREDIT_ISSUED(\"Кредит выдан\");\r\n\r\n\r\n    StatementStatus(String description) {\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ms-deal/src/main/java/ru/alex/msdeal/entity/constant/StatementStatus.java b/ms-deal/src/main/java/ru/alex/msdeal/entity/constant/StatementStatus.java
--- a/ms-deal/src/main/java/ru/alex/msdeal/entity/constant/StatementStatus.java	(revision 58edfa4b19a76323309cf2b18dabee45d7db1ddd)
+++ b/ms-deal/src/main/java/ru/alex/msdeal/entity/constant/StatementStatus.java	(date 1720249977090)
@@ -7,7 +7,7 @@
     CC_APPROVED("Выдача кредита одобрена"),
     PREPARE_DOCUMENTS("Подготовка документов"),
     DOCUMENT_CREATED("Создание документов"),
-    CLIENT_DENIED("Отказ клиенту"),
+    CLIENT_DENIED("Отказ клиента"),
     DOCUMENT_SIGNED("Документы подписаны"),
     CREDIT_ISSUED("Кредит выдан");
 
Index: ms-deal/src/main/resources/application.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>spring.application.name=ms-deal\r\n\r\nserver.port=8082\r\n\r\nspring.datasource.url=jdbc:postgresql://localhost:5454/bank-app\r\nspring.datasource.username=admin\r\nspring.datasource.password=admin\r\nspring.datasource.driverClassName=org.postgresql.Driver\r\n\r\nspring.jpa.hibernate.ddl-auto=validate\r\nspring.jpa.properties.hibernate.show_sql=true\r\nspring.jpa.properties.hibernate.format_sql=true\r\n\r\nspringdoc.swagger-ui.path=/swagger.html\r\n\r\nspring.flyway.enabled=true\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/ms-deal/src/main/resources/application.properties b/ms-deal/src/main/resources/application.properties
--- a/ms-deal/src/main/resources/application.properties	(revision 58edfa4b19a76323309cf2b18dabee45d7db1ddd)
+++ b/ms-deal/src/main/resources/application.properties	(date 1720108588637)
@@ -13,5 +13,4 @@
 
 springdoc.swagger-ui.path=/swagger.html
 
-spring.flyway.enabled=true
-
+spring.flyway.enabled=true
\ No newline at end of file
Index: ms-deal/src/main/resources/db/migration/V1_20240605__create_all_table.sql
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>create table client (\r\n    client_id        uuid,\r\n    last_name        varchar(30) not null,\r\n    first_name       varchar(30) not null,\r\n    middle_name      varchar(30),\r\n    birth_date       date not null,\r\n    email            varchar not null unique,\r\n    gender           varchar(15),\r\n    marital_status   varchar(15),\r\n    dependent_amount int4,\r\n    passport_id      jsonb,\r\n    employment_id    jsonb,\r\n    account_number   varchar(50),\r\n\r\n\r\n    constraint pk_client_id\r\n        primary key (client_id)\r\n);\r\n\r\ncreate table credit (\r\n    credit_id         uuid,\r\n    amount            numeric not null,\r\n    term              int4 not null,\r\n    monthly_payment   numeric not null,\r\n    rate              numeric,\r\n    psk               numeric,\r\n    payment_schedule  jsonb not null,\r\n    insurance_enabled bool not null,\r\n    salary_client     bool not null,\r\n    credit_status     varchar(10),\r\n\r\n    constraint pk_credit_id\r\n        primary key (credit_id)\r\n);\r\n\r\ncreate table statement (\r\n    statement_id   uuid,\r\n    client_id      uuid,\r\n    credit_id      uuid,\r\n    status         varchar(30),\r\n    creation_date  timestamptz,\r\n    applied_offer  jsonb,\r\n    sign_date      timestamptz,\r\n    ses_code       int4,\r\n    status_history jsonb,\r\n\r\n    constraint pk_statement_id\r\n        primary key (statement_id),\r\n    constraint fl_statement_client_id foreign key (client_id) references client (client_id),\r\n    constraint fk_statement_credit_id foreign key (credit_id) references credit (credit_id)\r\n);
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ms-deal/src/main/resources/db/migration/V1_20240605__create_all_table.sql b/ms-deal/src/main/resources/db/migration/V1_20240605__create_all_table.sql
--- a/ms-deal/src/main/resources/db/migration/V1_20240605__create_all_table.sql	(revision 58edfa4b19a76323309cf2b18dabee45d7db1ddd)
+++ b/ms-deal/src/main/resources/db/migration/V1_20240605__create_all_table.sql	(date 1720421117549)
@@ -4,7 +4,7 @@
     first_name       varchar(30) not null,
     middle_name      varchar(30),
     birth_date       date not null,
-    email            varchar not null unique,
+    email            varchar not null,
     gender           varchar(15),
     marital_status   varchar(15),
     dependent_amount int4,
Index: ms-dossier/mvnw
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ms-dossier/mvnw b/ms-dossier/mvnw
new file mode 100644
--- /dev/null	(date 1720006809838)
+++ b/ms-dossier/mvnw	(date 1720006809838)
@@ -0,0 +1,259 @@
+#!/bin/sh
+# ----------------------------------------------------------------------------
+# Licensed to the Apache Software Foundation (ASF) under one
+# or more contributor license agreements.  See the NOTICE file
+# distributed with this work for additional information
+# regarding copyright ownership.  The ASF licenses this file
+# to you under the Apache License, Version 2.0 (the
+# "License"); you may not use this file except in compliance
+# with the License.  You may obtain a copy of the License at
+#
+#    https://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing,
+# software distributed under the License is distributed on an
+# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+# KIND, either express or implied.  See the License for the
+# specific language governing permissions and limitations
+# under the License.
+# ----------------------------------------------------------------------------
+
+# ----------------------------------------------------------------------------
+# Apache Maven Wrapper startup batch script, version 3.3.2
+#
+# Optional ENV vars
+# -----------------
+#   JAVA_HOME - location of a JDK home dir, required when download maven via java source
+#   MVNW_REPOURL - repo url base for downloading maven distribution
+#   MVNW_USERNAME/MVNW_PASSWORD - user and password for downloading maven
+#   MVNW_VERBOSE - true: enable verbose log; debug: trace the mvnw script; others: silence the output
+# ----------------------------------------------------------------------------
+
+set -euf
+[ "${MVNW_VERBOSE-}" != debug ] || set -x
+
+# OS specific support.
+native_path() { printf %s\\n "$1"; }
+case "$(uname)" in
+CYGWIN* | MINGW*)
+  [ -z "${JAVA_HOME-}" ] || JAVA_HOME="$(cygpath --unix "$JAVA_HOME")"
+  native_path() { cygpath --path --windows "$1"; }
+  ;;
+esac
+
+# set JAVACMD and JAVACCMD
+set_java_home() {
+  # For Cygwin and MinGW, ensure paths are in Unix format before anything is touched
+  if [ -n "${JAVA_HOME-}" ]; then
+    if [ -x "$JAVA_HOME/jre/sh/java" ]; then
+      # IBM's JDK on AIX uses strange locations for the executables
+      JAVACMD="$JAVA_HOME/jre/sh/java"
+      JAVACCMD="$JAVA_HOME/jre/sh/javac"
+    else
+      JAVACMD="$JAVA_HOME/bin/java"
+      JAVACCMD="$JAVA_HOME/bin/javac"
+
+      if [ ! -x "$JAVACMD" ] || [ ! -x "$JAVACCMD" ]; then
+        echo "The JAVA_HOME environment variable is not defined correctly, so mvnw cannot run." >&2
+        echo "JAVA_HOME is set to \"$JAVA_HOME\", but \"\$JAVA_HOME/bin/java\" or \"\$JAVA_HOME/bin/javac\" does not exist." >&2
+        return 1
+      fi
+    fi
+  else
+    JAVACMD="$(
+      'set' +e
+      'unset' -f command 2>/dev/null
+      'command' -v java
+    )" || :
+    JAVACCMD="$(
+      'set' +e
+      'unset' -f command 2>/dev/null
+      'command' -v javac
+    )" || :
+
+    if [ ! -x "${JAVACMD-}" ] || [ ! -x "${JAVACCMD-}" ]; then
+      echo "The java/javac command does not exist in PATH nor is JAVA_HOME set, so mvnw cannot run." >&2
+      return 1
+    fi
+  fi
+}
+
+# hash string like Java String::hashCode
+hash_string() {
+  str="${1:-}" h=0
+  while [ -n "$str" ]; do
+    char="${str%"${str#?}"}"
+    h=$(((h * 31 + $(LC_CTYPE=C printf %d "'$char")) % 4294967296))
+    str="${str#?}"
+  done
+  printf %x\\n $h
+}
+
+verbose() { :; }
+[ "${MVNW_VERBOSE-}" != true ] || verbose() { printf %s\\n "${1-}"; }
+
+die() {
+  printf %s\\n "$1" >&2
+  exit 1
+}
+
+trim() {
+  # MWRAPPER-139:
+  #   Trims trailing and leading whitespace, carriage returns, tabs, and linefeeds.
+  #   Needed for removing poorly interpreted newline sequences when running in more
+  #   exotic environments such as mingw bash on Windows.
+  printf "%s" "${1}" | tr -d '[:space:]'
+}
+
+# parse distributionUrl and optional distributionSha256Sum, requires .mvn/wrapper/maven-wrapper.properties
+while IFS="=" read -r key value; do
+  case "${key-}" in
+  distributionUrl) distributionUrl=$(trim "${value-}") ;;
+  distributionSha256Sum) distributionSha256Sum=$(trim "${value-}") ;;
+  esac
+done <"${0%/*}/.mvn/wrapper/maven-wrapper.properties"
+[ -n "${distributionUrl-}" ] || die "cannot read distributionUrl property in ${0%/*}/.mvn/wrapper/maven-wrapper.properties"
+
+case "${distributionUrl##*/}" in
+maven-mvnd-*bin.*)
+  MVN_CMD=mvnd.sh _MVNW_REPO_PATTERN=/maven/mvnd/
+  case "${PROCESSOR_ARCHITECTURE-}${PROCESSOR_ARCHITEW6432-}:$(uname -a)" in
+  *AMD64:CYGWIN* | *AMD64:MINGW*) distributionPlatform=windows-amd64 ;;
+  :Darwin*x86_64) distributionPlatform=darwin-amd64 ;;
+  :Darwin*arm64) distributionPlatform=darwin-aarch64 ;;
+  :Linux*x86_64*) distributionPlatform=linux-amd64 ;;
+  *)
+    echo "Cannot detect native platform for mvnd on $(uname)-$(uname -m), use pure java version" >&2
+    distributionPlatform=linux-amd64
+    ;;
+  esac
+  distributionUrl="${distributionUrl%-bin.*}-$distributionPlatform.zip"
+  ;;
+maven-mvnd-*) MVN_CMD=mvnd.sh _MVNW_REPO_PATTERN=/maven/mvnd/ ;;
+*) MVN_CMD="mvn${0##*/mvnw}" _MVNW_REPO_PATTERN=/org/apache/maven/ ;;
+esac
+
+# apply MVNW_REPOURL and calculate MAVEN_HOME
+# maven home pattern: ~/.m2/wrapper/dists/{apache-maven-<version>,maven-mvnd-<version>-<platform>}/<hash>
+[ -z "${MVNW_REPOURL-}" ] || distributionUrl="$MVNW_REPOURL$_MVNW_REPO_PATTERN${distributionUrl#*"$_MVNW_REPO_PATTERN"}"
+distributionUrlName="${distributionUrl##*/}"
+distributionUrlNameMain="${distributionUrlName%.*}"
+distributionUrlNameMain="${distributionUrlNameMain%-bin}"
+MAVEN_USER_HOME="${MAVEN_USER_HOME:-${HOME}/.m2}"
+MAVEN_HOME="${MAVEN_USER_HOME}/wrapper/dists/${distributionUrlNameMain-}/$(hash_string "$distributionUrl")"
+
+exec_maven() {
+  unset MVNW_VERBOSE MVNW_USERNAME MVNW_PASSWORD MVNW_REPOURL || :
+  exec "$MAVEN_HOME/bin/$MVN_CMD" "$@" || die "cannot exec $MAVEN_HOME/bin/$MVN_CMD"
+}
+
+if [ -d "$MAVEN_HOME" ]; then
+  verbose "found existing MAVEN_HOME at $MAVEN_HOME"
+  exec_maven "$@"
+fi
+
+case "${distributionUrl-}" in
+*?-bin.zip | *?maven-mvnd-?*-?*.zip) ;;
+*) die "distributionUrl is not valid, must match *-bin.zip or maven-mvnd-*.zip, but found '${distributionUrl-}'" ;;
+esac
+
+# prepare tmp dir
+if TMP_DOWNLOAD_DIR="$(mktemp -d)" && [ -d "$TMP_DOWNLOAD_DIR" ]; then
+  clean() { rm -rf -- "$TMP_DOWNLOAD_DIR"; }
+  trap clean HUP INT TERM EXIT
+else
+  die "cannot create temp dir"
+fi
+
+mkdir -p -- "${MAVEN_HOME%/*}"
+
+# Download and Install Apache Maven
+verbose "Couldn't find MAVEN_HOME, downloading and installing it ..."
+verbose "Downloading from: $distributionUrl"
+verbose "Downloading to: $TMP_DOWNLOAD_DIR/$distributionUrlName"
+
+# select .zip or .tar.gz
+if ! command -v unzip >/dev/null; then
+  distributionUrl="${distributionUrl%.zip}.tar.gz"
+  distributionUrlName="${distributionUrl##*/}"
+fi
+
+# verbose opt
+__MVNW_QUIET_WGET=--quiet __MVNW_QUIET_CURL=--silent __MVNW_QUIET_UNZIP=-q __MVNW_QUIET_TAR=''
+[ "${MVNW_VERBOSE-}" != true ] || __MVNW_QUIET_WGET='' __MVNW_QUIET_CURL='' __MVNW_QUIET_UNZIP='' __MVNW_QUIET_TAR=v
+
+# normalize http auth
+case "${MVNW_PASSWORD:+has-password}" in
+'') MVNW_USERNAME='' MVNW_PASSWORD='' ;;
+has-password) [ -n "${MVNW_USERNAME-}" ] || MVNW_USERNAME='' MVNW_PASSWORD='' ;;
+esac
+
+if [ -z "${MVNW_USERNAME-}" ] && command -v wget >/dev/null; then
+  verbose "Found wget ... using wget"
+  wget ${__MVNW_QUIET_WGET:+"$__MVNW_QUIET_WGET"} "$distributionUrl" -O "$TMP_DOWNLOAD_DIR/$distributionUrlName" || die "wget: Failed to fetch $distributionUrl"
+elif [ -z "${MVNW_USERNAME-}" ] && command -v curl >/dev/null; then
+  verbose "Found curl ... using curl"
+  curl ${__MVNW_QUIET_CURL:+"$__MVNW_QUIET_CURL"} -f -L -o "$TMP_DOWNLOAD_DIR/$distributionUrlName" "$distributionUrl" || die "curl: Failed to fetch $distributionUrl"
+elif set_java_home; then
+  verbose "Falling back to use Java to download"
+  javaSource="$TMP_DOWNLOAD_DIR/Downloader.java"
+  targetZip="$TMP_DOWNLOAD_DIR/$distributionUrlName"
+  cat >"$javaSource" <<-END
+	public class Downloader extends java.net.Authenticator
+	{
+	  protected java.net.PasswordAuthentication getPasswordAuthentication()
+	  {
+	    return new java.net.PasswordAuthentication( System.getenv( "MVNW_USERNAME" ), System.getenv( "MVNW_PASSWORD" ).toCharArray() );
+	  }
+	  public static void main( String[] args ) throws Exception
+	  {
+	    setDefault( new Downloader() );
+	    java.nio.file.Files.copy( java.net.URI.create( args[0] ).toURL().openStream(), java.nio.file.Paths.get( args[1] ).toAbsolutePath().normalize() );
+	  }
+	}
+	END
+  # For Cygwin/MinGW, switch paths to Windows format before running javac and java
+  verbose " - Compiling Downloader.java ..."
+  "$(native_path "$JAVACCMD")" "$(native_path "$javaSource")" || die "Failed to compile Downloader.java"
+  verbose " - Running Downloader.java ..."
+  "$(native_path "$JAVACMD")" -cp "$(native_path "$TMP_DOWNLOAD_DIR")" Downloader "$distributionUrl" "$(native_path "$targetZip")"
+fi
+
+# If specified, validate the SHA-256 sum of the Maven distribution zip file
+if [ -n "${distributionSha256Sum-}" ]; then
+  distributionSha256Result=false
+  if [ "$MVN_CMD" = mvnd.sh ]; then
+    echo "Checksum validation is not supported for maven-mvnd." >&2
+    echo "Please disable validation by removing 'distributionSha256Sum' from your maven-wrapper.properties." >&2
+    exit 1
+  elif command -v sha256sum >/dev/null; then
+    if echo "$distributionSha256Sum  $TMP_DOWNLOAD_DIR/$distributionUrlName" | sha256sum -c >/dev/null 2>&1; then
+      distributionSha256Result=true
+    fi
+  elif command -v shasum >/dev/null; then
+    if echo "$distributionSha256Sum  $TMP_DOWNLOAD_DIR/$distributionUrlName" | shasum -a 256 -c >/dev/null 2>&1; then
+      distributionSha256Result=true
+    fi
+  else
+    echo "Checksum validation was requested but neither 'sha256sum' or 'shasum' are available." >&2
+    echo "Please install either command, or disable validation by removing 'distributionSha256Sum' from your maven-wrapper.properties." >&2
+    exit 1
+  fi
+  if [ $distributionSha256Result = false ]; then
+    echo "Error: Failed to validate Maven distribution SHA-256, your Maven distribution might be compromised." >&2
+    echo "If you updated your Maven version, you need to update the specified distributionSha256Sum property." >&2
+    exit 1
+  fi
+fi
+
+# unzip and move
+if command -v unzip >/dev/null; then
+  unzip ${__MVNW_QUIET_UNZIP:+"$__MVNW_QUIET_UNZIP"} "$TMP_DOWNLOAD_DIR/$distributionUrlName" -d "$TMP_DOWNLOAD_DIR" || die "failed to unzip"
+else
+  tar xzf${__MVNW_QUIET_TAR:+"$__MVNW_QUIET_TAR"} "$TMP_DOWNLOAD_DIR/$distributionUrlName" -C "$TMP_DOWNLOAD_DIR" || die "failed to untar"
+fi
+printf %s\\n "$distributionUrl" >"$TMP_DOWNLOAD_DIR/$distributionUrlNameMain/mvnw.url"
+mv -- "$TMP_DOWNLOAD_DIR/$distributionUrlNameMain" "$MAVEN_HOME" || [ -d "$MAVEN_HOME" ] || die "fail to move MAVEN_HOME"
+
+clean || :
+exec_maven "$@"
Index: ms-deal/src/main/java/ru/alex/msdeal/api/DealApi.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package ru.alex.msdeal.api;\r\n\r\nimport java.util.List;\r\nimport javax.validation.Valid;\r\nimport io.swagger.v3.oas.annotations.Operation;\r\nimport io.swagger.v3.oas.annotations.Parameter;\r\nimport io.swagger.v3.oas.annotations.media.ArraySchema;\r\nimport io.swagger.v3.oas.annotations.media.Content;\r\nimport io.swagger.v3.oas.annotations.media.Schema;\r\nimport io.swagger.v3.oas.annotations.responses.ApiResponse;\r\nimport io.swagger.v3.oas.annotations.responses.ApiResponses;\r\nimport io.swagger.v3.oas.annotations.tags.Tag;\r\nimport org.springframework.http.ResponseEntity;\r\nimport org.springframework.web.bind.annotation.PathVariable;\r\nimport org.springframework.web.bind.annotation.PostMapping;\r\nimport org.springframework.web.bind.annotation.RequestBody;\r\nimport org.springframework.web.bind.annotation.RequestMapping;\r\nimport ru.alex.msdeal.dto.FinishRegistrationRequestDto;\r\nimport ru.alex.msdeal.dto.LoanOfferDto;\r\nimport ru.alex.msdeal.dto.LoanStatementRequestDto;\r\n\r\n\r\n@Tag(name = \"Deal controller\", description = \"For save and send all purpose\")\r\n@RequestMapping(\"deal\")\r\npublic interface DealApi {\r\n\r\n    @Operation(summary = \"Receive and save offer for loan\")\r\n    @ApiResponses(value =\r\n    @ApiResponse(\r\n        responseCode = \"200\",\r\n        description = \"List with offers\",\r\n        content = { @Content(\r\n            mediaType = \"application/json\",\r\n            array = @ArraySchema(schema = @Schema(\r\n                implementation = LoanOfferDto.class))\r\n        )\r\n        })\r\n    )\r\n    @PostMapping(\"statement\")\r\n    ResponseEntity<List<LoanOfferDto>> createOffer(@RequestBody LoanStatementRequestDto loanStatementRequestDto);\r\n\r\n\r\n    @Operation(summary = \"Choose purpose\")\r\n    @ApiResponses(value =\r\n    @ApiResponse(\r\n        responseCode = \"200\",\r\n        description = \"Void\",\r\n        content = { @Content(\r\n            mediaType = \"application/json\")\r\n        })\r\n    )\r\n    @PostMapping(\"offer/select\")\r\n    ResponseEntity<Void> offerSelect(@Valid @RequestBody LoanOfferDto loanOfferDto);\r\n\r\n    @Operation(summary = \"Finish registration and calculate full credit purpose\")\r\n    @ApiResponses(value =\r\n    @ApiResponse(\r\n        responseCode = \"200\",\r\n        description = \"Void\",\r\n        content = { @Content(\r\n            mediaType = \"application/json\")\r\n        })\r\n    )\r\n    @PostMapping(\"calculate/{statementId}\")\r\n    ResponseEntity<Void> calculate(@Valid @RequestBody FinishRegistrationRequestDto finishRegistrationRequestDto,\r\n                                   @Parameter(name = \"statementId\") @PathVariable String statementId);\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ms-deal/src/main/java/ru/alex/msdeal/api/DealApi.java b/ms-deal/src/main/java/ru/alex/msdeal/api/DealApi.java
--- a/ms-deal/src/main/java/ru/alex/msdeal/api/DealApi.java	(revision 58edfa4b19a76323309cf2b18dabee45d7db1ddd)
+++ b/ms-deal/src/main/java/ru/alex/msdeal/api/DealApi.java	(date 1720436596744)
@@ -18,6 +18,7 @@
 import ru.alex.msdeal.dto.FinishRegistrationRequestDto;
 import ru.alex.msdeal.dto.LoanOfferDto;
 import ru.alex.msdeal.dto.LoanStatementRequestDto;
+import ru.alex.msdeal.dto.SesCodeDto;
 
 
 @Tag(name = "Deal controller", description = "For save and send all purpose")
@@ -64,4 +65,38 @@
     @PostMapping("calculate/{statementId}")
     ResponseEntity<Void> calculate(@Valid @RequestBody FinishRegistrationRequestDto finishRegistrationRequestDto,
                                    @Parameter(name = "statementId") @PathVariable String statementId);
+
+    @Operation(summary = "Request for sending documents")
+    @ApiResponses(value =
+    @ApiResponse(
+        responseCode = "200",
+        description = "Void")
+    )
+    @PostMapping("document/{statementId}/send")
+    ResponseEntity<Void> sendDocument(@Parameter(name = "statementId") @PathVariable String statementId);
+
+    @Operation(summary = "Request for sign documents")
+    @ApiResponses(value =
+    @ApiResponse(
+        responseCode = "200",
+        description = "Void",
+        content = { @Content(
+            mediaType = "application/json")
+        })
+    )
+    @PostMapping("document/{statementId}/sign")
+    ResponseEntity<Void> signDocument(@Parameter(name = "statementId") @PathVariable String statementId);
+
+    @Operation(summary = "Code for sign documents")
+    @ApiResponses(value =
+    @ApiResponse(
+        responseCode = "200",
+        description = "Void",
+        content = { @Content(
+            mediaType = "application/json")
+        })
+    )
+    @PostMapping("document/{statementId}/code")
+    ResponseEntity<Void> codeSign(@Valid @RequestBody SesCodeDto sesCode,
+                                  @Parameter(name = "statementId") @PathVariable String statementId);
 }
Index: ms-deal/src/main/java/ru/alex/msdeal/dto/CreditDto.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package ru.alex.msdeal.dto;\r\n\r\nimport java.math.BigDecimal;\r\nimport java.util.List;\r\nimport lombok.*;\r\n\r\n\r\n@Getter\r\n@Setter\r\n@ToString\r\n@AllArgsConstructor\r\n@Builder\r\npublic class CreditDto {\r\n\r\n    private BigDecimal amount;\r\n    private Integer term;\r\n    private BigDecimal monthlyPayment;\r\n    private BigDecimal rate;\r\n    private BigDecimal psk;\r\n    private Boolean isInsuranceEnabled;\r\n    private Boolean isSalaryClient;\r\n    private List<PaymentScheduleElementDto> paymentSchedule;\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ms-deal/src/main/java/ru/alex/msdeal/dto/CreditDto.java b/ms-deal/src/main/java/ru/alex/msdeal/dto/CreditDto.java
--- a/ms-deal/src/main/java/ru/alex/msdeal/dto/CreditDto.java	(revision 58edfa4b19a76323309cf2b18dabee45d7db1ddd)
+++ b/ms-deal/src/main/java/ru/alex/msdeal/dto/CreditDto.java	(date 1720424471571)
@@ -10,6 +10,7 @@
 @ToString
 @AllArgsConstructor
 @Builder
+@NoArgsConstructor
 public class CreditDto {
 
     private BigDecimal amount;
Index: ms-dossier/src/main/java/ru/alex/msdossier/config/KafkaConsumerConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ms-dossier/src/main/java/ru/alex/msdossier/config/KafkaConsumerConfig.java b/ms-dossier/src/main/java/ru/alex/msdossier/config/KafkaConsumerConfig.java
new file mode 100644
--- /dev/null	(date 1720417307266)
+++ b/ms-dossier/src/main/java/ru/alex/msdossier/config/KafkaConsumerConfig.java	(date 1720417307266)
@@ -0,0 +1,46 @@
+package ru.alex.msdossier.config;
+
+import java.util.HashMap;
+import org.apache.kafka.clients.consumer.ConsumerConfig;
+import org.apache.kafka.common.serialization.StringDeserializer;
+import org.springframework.context.annotation.Bean;
+import org.springframework.context.annotation.Configuration;
+import org.springframework.kafka.config.ConcurrentKafkaListenerContainerFactory;
+import org.springframework.kafka.core.ConsumerFactory;
+import org.springframework.kafka.core.DefaultKafkaConsumerFactory;
+import org.springframework.kafka.support.serializer.JsonDeserializer;
+import ru.alex.msdossier.dto.EmailMessage;
+
+
+@Configuration
+public class KafkaConsumerConfig {
+
+    @Bean
+    public ConsumerFactory<String, EmailMessage> consumerFactory() {
+        var consumerProperties = new HashMap<String, Object>();
+
+        consumerProperties.put(ConsumerConfig.BOOTSTRAP_SERVERS_CONFIG, "localhost:9092");
+        consumerProperties.put(ConsumerConfig.KEY_DESERIALIZER_CLASS_CONFIG, StringDeserializer.class);
+        consumerProperties.put(ConsumerConfig.VALUE_DESERIALIZER_CLASS_CONFIG, JsonDeserializer.class);
+        consumerProperties.put(ConsumerConfig.GROUP_ID_CONFIG, "email-sender");
+        consumerProperties.put(ConsumerConfig.AUTO_OFFSET_RESET_CONFIG, "earliest");
+        consumerProperties.put(ConsumerConfig.ENABLE_AUTO_COMMIT_CONFIG, false);
+        consumerProperties.put(JsonDeserializer.USE_TYPE_INFO_HEADERS, false);
+
+        var emailMessageJsonDeserializer = new JsonDeserializer<>(EmailMessage.class);
+
+        return new DefaultKafkaConsumerFactory<>(
+            consumerProperties,
+            new StringDeserializer(),
+            emailMessageJsonDeserializer
+        );
+    }
+
+    @Bean
+    public ConcurrentKafkaListenerContainerFactory<String, EmailMessage> kafkaListenerContainerFactory() {
+        var factory = new ConcurrentKafkaListenerContainerFactory<String, EmailMessage>();
+        factory.setConsumerFactory(consumerFactory());
+
+        return factory;
+    }
+}
Index: ms-dossier/src/main/java/ru/alex/msdossier/MsDossierApplication.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ms-dossier/src/main/java/ru/alex/msdossier/MsDossierApplication.java b/ms-dossier/src/main/java/ru/alex/msdossier/MsDossierApplication.java
new file mode 100644
--- /dev/null	(date 1720422974416)
+++ b/ms-dossier/src/main/java/ru/alex/msdossier/MsDossierApplication.java	(date 1720422974416)
@@ -0,0 +1,16 @@
+package ru.alex.msdossier;
+
+import org.springframework.boot.SpringApplication;
+import org.springframework.boot.autoconfigure.SpringBootApplication;
+import org.springframework.scheduling.annotation.EnableAsync;
+
+
+@EnableAsync
+@SpringBootApplication
+public class MsDossierApplication {
+
+	public static void main(String[] args) {
+		SpringApplication.run(MsDossierApplication.class, args);
+	}
+
+}
Index: ms-dossier/src/test/java/ru/alex/msdossier/MsDossierApplicationTests.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ms-dossier/src/test/java/ru/alex/msdossier/MsDossierApplicationTests.java b/ms-dossier/src/test/java/ru/alex/msdossier/MsDossierApplicationTests.java
new file mode 100644
--- /dev/null	(date 1720006809835)
+++ b/ms-dossier/src/test/java/ru/alex/msdossier/MsDossierApplicationTests.java	(date 1720006809835)
@@ -0,0 +1,13 @@
+package ru.alex.msdossier;
+
+import org.junit.jupiter.api.Test;
+import org.springframework.boot.test.context.SpringBootTest;
+
+@SpringBootTest
+class MsDossierApplicationTests {
+
+	@Test
+	void contextLoads() {
+	}
+
+}
Index: ms-deal/src/main/java/ru/alex/msdeal/dto/MessageError.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package ru.alex.msdeal.dto;\r\n\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\nimport lombok.*;\r\n\r\n\r\n@Getter\r\n@Setter\r\n@AllArgsConstructor\r\n@NoArgsConstructor\r\n@ToString\r\npublic class MessageError {\r\n    private String message;\r\n    private Map<String, String> errors;\r\n\r\n    public MessageError(final String message) {\r\n        this.message = message;\r\n        this.errors = new HashMap<>();\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ms-deal/src/main/java/ru/alex/msdeal/dto/MessageError.java b/ms-deal/src/main/java/ru/alex/msdeal/dto/MessageError.java
--- a/ms-deal/src/main/java/ru/alex/msdeal/dto/MessageError.java	(revision 58edfa4b19a76323309cf2b18dabee45d7db1ddd)
+++ b/ms-deal/src/main/java/ru/alex/msdeal/dto/MessageError.java	(date 1720448984782)
@@ -1,6 +1,5 @@
 package ru.alex.msdeal.dto;
 
-import java.util.HashMap;
 import java.util.Map;
 import lombok.*;
 
@@ -16,6 +15,5 @@
 
     public MessageError(final String message) {
         this.message = message;
-        this.errors = new HashMap<>();
     }
 }
\ No newline at end of file
Index: ms-dossier/src/main/resources/application.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/ms-dossier/src/main/resources/application.properties b/ms-dossier/src/main/resources/application.properties
new file mode 100644
--- /dev/null	(date 1720425049608)
+++ b/ms-dossier/src/main/resources/application.properties	(date 1720425049608)
@@ -0,0 +1,12 @@
+spring.application.name=ms-dossier
+
+server.port=8084
+
+spring.mail.host=smtp.gmail.com
+spring.mail.port=25
+spring.mail.username=sergeevbass@gmail.com
+spring.mail.password=fxtr uhja qila xugp
+spring.mail.properties.mail.smtp.auth=true
+spring.mail.properties.mail.smtp.starttls.enable=true
+
+ms-deal.address=localhost:8082
\ No newline at end of file
Index: ms-deal/src/main/java/ru/alex/msdeal/dto/SesCodeDto.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ms-deal/src/main/java/ru/alex/msdeal/dto/SesCodeDto.java b/ms-deal/src/main/java/ru/alex/msdeal/dto/SesCodeDto.java
new file mode 100644
--- /dev/null	(date 1720436596734)
+++ b/ms-deal/src/main/java/ru/alex/msdeal/dto/SesCodeDto.java	(date 1720436596734)
@@ -0,0 +1,13 @@
+package ru.alex.msdeal.dto;
+
+import javax.validation.constraints.NotNull;
+import lombok.Getter;
+import lombok.Setter;
+
+
+@Setter
+@Getter
+public class SesCodeDto {
+    @NotNull
+    private int sesCode;
+}
Index: ms-deal/src/main/java/ru/alex/msdeal/config/KafkaProducerConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ms-deal/src/main/java/ru/alex/msdeal/config/KafkaProducerConfig.java b/ms-deal/src/main/java/ru/alex/msdeal/config/KafkaProducerConfig.java
new file mode 100644
--- /dev/null	(date 1720411947413)
+++ b/ms-deal/src/main/java/ru/alex/msdeal/config/KafkaProducerConfig.java	(date 1720411947413)
@@ -0,0 +1,49 @@
+package ru.alex.msdeal.config;
+
+import java.util.ArrayList;
+import java.util.HashMap;
+import org.apache.kafka.clients.admin.NewTopic;
+import org.apache.kafka.clients.producer.ProducerConfig;
+import org.apache.kafka.common.serialization.StringSerializer;
+import org.springframework.context.annotation.Bean;
+import org.springframework.context.annotation.Configuration;
+import org.springframework.kafka.core.DefaultKafkaProducerFactory;
+import org.springframework.kafka.core.KafkaAdmin;
+import org.springframework.kafka.core.KafkaTemplate;
+import org.springframework.kafka.core.ProducerFactory;
+import org.springframework.kafka.support.serializer.JsonSerializer;
+import ru.alex.msdeal.dto.EmailMessage;
+import ru.alex.msdeal.entity.constant.Theme;
+
+
+@Configuration
+public class KafkaProducerConfig {
+
+    @Bean
+    public ProducerFactory<String, EmailMessage> producerFactory() {
+        var kafkaProperties = new HashMap<String, Object>();
+
+        kafkaProperties.put(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, "localhost:9092");
+        kafkaProperties.put(ProducerConfig.KEY_SERIALIZER_CLASS_CONFIG, StringSerializer.class);
+        kafkaProperties.put(ProducerConfig.VALUE_SERIALIZER_CLASS_CONFIG, JsonSerializer.class);
+
+        return new DefaultKafkaProducerFactory<>(kafkaProperties);
+    }
+
+    @Bean
+    public KafkaTemplate<String, EmailMessage> kafkaTemplate() {
+        return new KafkaTemplate<>(producerFactory());
+    }
+
+    @Bean
+    public KafkaAdmin.NewTopics createKafkaTopics() {
+        var newTopics = new ArrayList<NewTopic>();
+
+        for (Theme theme : Theme.values()) {
+            newTopics.add(new NewTopic(theme.name(), 5, (short) 3));
+        }
+
+        return new KafkaAdmin.NewTopics(newTopics.toArray(NewTopic[]::new));
+    }
+}
+
Index: ms-deal/src/main/java/ru/alex/msdeal/exception/SesCodeNotEqualsException.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ms-deal/src/main/java/ru/alex/msdeal/exception/SesCodeNotEqualsException.java b/ms-deal/src/main/java/ru/alex/msdeal/exception/SesCodeNotEqualsException.java
new file mode 100644
--- /dev/null	(date 1720436758183)
+++ b/ms-deal/src/main/java/ru/alex/msdeal/exception/SesCodeNotEqualsException.java	(date 1720436758183)
@@ -0,0 +1,7 @@
+package ru.alex.msdeal.exception;
+
+public class SesCodeNotEqualsException extends RuntimeException {
+    public SesCodeNotEqualsException(String message) {
+        super(message);
+    }
+}
Index: ms-dossier/src/main/java/ru/alex/msdossier/service/EmailKafkaListener.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ms-dossier/src/main/java/ru/alex/msdossier/service/EmailKafkaListener.java b/ms-dossier/src/main/java/ru/alex/msdossier/service/EmailKafkaListener.java
new file mode 100644
--- /dev/null	(date 1720448984785)
+++ b/ms-dossier/src/main/java/ru/alex/msdossier/service/EmailKafkaListener.java	(date 1720448984785)
@@ -0,0 +1,116 @@
+package ru.alex.msdossier.service;
+
+import java.io.IOException;
+import java.nio.file.Files;
+import java.nio.file.Path;
+import jakarta.mail.MessagingException;
+import lombok.RequiredArgsConstructor;
+import lombok.extern.log4j.Log4j2;
+import org.springframework.beans.factory.annotation.Value;
+import org.springframework.core.io.ByteArrayResource;
+import org.springframework.kafka.annotation.KafkaListener;
+import org.springframework.mail.SimpleMailMessage;
+import org.springframework.mail.javamail.JavaMailSender;
+import org.springframework.mail.javamail.MimeMessageHelper;
+import org.springframework.scheduling.annotation.Async;
+import org.springframework.stereotype.Service;
+import ru.alex.msdossier.dto.EmailMessage;
+import ru.alex.msdossier.dto.constant.Theme;
+
+
+@Log4j2
+@Service
+@RequiredArgsConstructor
+public class EmailKafkaListener {
+
+    private final JavaMailSender mailSender;
+
+    @Value("${ms-deal.address}")
+    private String msDealAddress;
+
+    @Async
+    @KafkaListener(topics = { "FINISH_REGISTRATION" }, groupId = "email-sender")
+    public void sendEmailFinishRegistration(EmailMessage message) {
+        var mailMessage = new SimpleMailMessage();
+        mailMessage.setTo(message.address());
+        mailMessage.setSubject(Theme.FINISH_REGISTRATION.name());
+        mailMessage.setText("Ваша заявка предварительно одобрена, завершите оформление");
+
+        mailSender.send(mailMessage);
+
+        log.info("Message with theme: {}, was sent to: {}", message.theme(), message.address());
+    }
+
+    @Async
+    @KafkaListener(topics = "CREATE_DOCUMENT", groupId = "email-sender")
+    public void sendEmailCreateDocument(EmailMessage message) {
+        var mailMessage = new SimpleMailMessage();
+        mailMessage.setTo(message.address());
+        mailMessage.setSubject(Theme.CREATE_DOCUMENT.name());
+        mailMessage.setText("<a href=\"http://%s/deal/document/%s/send\">Ссылка на формирование документов</a>"
+            .formatted(msDealAddress, message.statementId()));
+
+        mailSender.send(mailMessage);
+
+        log.info("Message with theme: {}, was sent to: {}", message.theme(), message.address());
+    }
+
+    @Async
+    @KafkaListener(topics = "SEND_DOCUMENT", groupId = "email-sender")
+    public void sendEmailSendDocument(EmailMessage message) throws MessagingException, IOException {
+        var mimeMessage = mailSender.createMimeMessage();
+        var mimeMessageHelper = new MimeMessageHelper(mimeMessage, true);
+
+        mimeMessageHelper.setTo(message.address());
+        mimeMessageHelper.setSubject(Theme.FINISH_REGISTRATION.name());
+        mimeMessageHelper.setText(("Документы для ознакомления находятся в письме." +
+                                   "\nЕсли вы согласны, пожалуйста перейдите по это ссылке: " +
+                                   "<a href=\"http://%s/deal/document/%s/sign\">подписать документы</a>").formatted(msDealAddress, message.statementId()));
+        mimeMessageHelper.addAttachment("agreement.txt",
+            new ByteArrayResource(Files.readAllBytes(Path.of("ms-dossier/src/main/resources/agreement.txt"))));
+
+        mailSender.send(mimeMessage);
+
+        log.info("Message with theme: {}, was sent to: {}", message.theme(), message.address());
+    }
+
+    @Async
+    @KafkaListener(topics = "SEND_SES", groupId = "email-sender")
+    public void sendEmailSesCode(EmailMessage message) {
+        var mailMessage = new SimpleMailMessage();
+        mailMessage.setTo(message.address());
+        mailMessage.setSubject(Theme.SEND_SES.name());
+        mailMessage.setText(("Для подтверждения подписания документов отправьте этот код: %d\n" +
+                             "<a href=\"http://%s/deal/document/%s/code\">На этот адрес</a>").formatted(message.sesCode(), msDealAddress, message.statementId()));
+
+        mailSender.send(mailMessage);
+
+        log.info("Message with theme: {}, was sent to: {}", message.theme(), message.address());
+    }
+
+    @Async
+    @KafkaListener(topics = "CREDIT_ISSUED", groupId = "email-sender")
+    public void sendEmailCreditIssued(EmailMessage message) {
+        var mailMessage = new SimpleMailMessage();
+        mailMessage.setTo(message.address());
+        mailMessage.setSubject(Theme.STATEMENT_DENIED.name());
+        mailMessage.setText("Поздравляю вы взяли вредит!!!");
+
+        mailSender.send(mailMessage);
+
+        log.info("Message with theme: {}, was sent to: {}", message.theme(), message.address());
+    }
+
+    @Async
+    @KafkaListener(topics = "STATEMENT_DENIED", groupId = "email-sender")
+    public void sendEmailStatementDenied(EmailMessage message) {
+        var mailMessage = new SimpleMailMessage();
+        mailMessage.setTo(message.address());
+        mailMessage.setSubject(Theme.STATEMENT_DENIED.name());
+        mailMessage.setText("Ваша заявка отклонена");
+
+        mailSender.send(mailMessage);
+
+        log.info("Message with theme: {}, was sent to: {}", message.theme(), message.address());
+    }
+}
Index: ms-deal/src/main/java/ru/alex/msdeal/exception/ClientDeniedException.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ms-deal/src/main/java/ru/alex/msdeal/exception/ClientDeniedException.java b/ms-deal/src/main/java/ru/alex/msdeal/exception/ClientDeniedException.java
new file mode 100644
--- /dev/null	(date 1720249977095)
+++ b/ms-deal/src/main/java/ru/alex/msdeal/exception/ClientDeniedException.java	(date 1720249977095)
@@ -0,0 +1,7 @@
+package ru.alex.msdeal.exception;
+
+public class ClientDeniedException extends RuntimeException {
+    public ClientDeniedException(String msg) {
+        super(msg);
+    }
+}
Index: ms-deal/src/main/java/ru/alex/msdeal/config/EmailSender.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ms-deal/src/main/java/ru/alex/msdeal/config/EmailSender.java b/ms-deal/src/main/java/ru/alex/msdeal/config/EmailSender.java
new file mode 100644
--- /dev/null	(date 1720448984795)
+++ b/ms-deal/src/main/java/ru/alex/msdeal/config/EmailSender.java	(date 1720448984795)
@@ -0,0 +1,21 @@
+package ru.alex.msdeal.config;
+
+import lombok.RequiredArgsConstructor;
+import lombok.extern.slf4j.Slf4j;
+import org.springframework.kafka.core.KafkaTemplate;
+import org.springframework.stereotype.Component;
+import ru.alex.msdeal.dto.EmailMessage;
+
+
+@Slf4j
+@Component
+@RequiredArgsConstructor
+public class EmailSender {
+
+    private final KafkaTemplate<String, EmailMessage> kafkaTemplate;
+
+    public void sendMail(EmailMessage message) {
+        kafkaTemplate.send(message.theme().name(), message);
+        log.info("Message {} was send to topic {}", message, message.theme().name());
+    }
+}
Index: ms-dossier/src/main/resources/agreement.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ms-dossier/src/main/resources/agreement.txt b/ms-dossier/src/main/resources/agreement.txt
new file mode 100644
--- /dev/null	(date 1720434623170)
+++ b/ms-dossier/src/main/resources/agreement.txt	(date 1720434623170)
@@ -0,0 +1,1 @@
+Здесь содержится вся информация о клиенте, и условиях договора.
\ No newline at end of file
Index: ms-dossier/src/main/java/ru/alex/msdossier/dto/EmailMessage.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ms-dossier/src/main/java/ru/alex/msdossier/dto/EmailMessage.java b/ms-dossier/src/main/java/ru/alex/msdossier/dto/EmailMessage.java
new file mode 100644
--- /dev/null	(date 1720448015241)
+++ b/ms-dossier/src/main/java/ru/alex/msdossier/dto/EmailMessage.java	(date 1720448015241)
@@ -0,0 +1,8 @@
+package ru.alex.msdossier.dto;
+
+import java.util.UUID;
+import ru.alex.msdossier.dto.constant.Theme;
+
+
+public record EmailMessage(String address, Theme theme, UUID statementId, Integer sesCode) {
+}
Index: ms-dossier/src/main/java/ru/alex/msdossier/dto/constant/Theme.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ms-dossier/src/main/java/ru/alex/msdossier/dto/constant/Theme.java b/ms-dossier/src/main/java/ru/alex/msdossier/dto/constant/Theme.java
new file mode 100644
--- /dev/null	(date 1720448984779)
+++ b/ms-dossier/src/main/java/ru/alex/msdossier/dto/constant/Theme.java	(date 1720448984779)
@@ -0,0 +1,19 @@
+package ru.alex.msdossier.dto.constant;
+
+import lombok.Getter;
+
+
+@Getter
+public enum Theme {
+    FINISH_REGISTRATION("Окончание регистрации"),
+    CREATE_DOCUMENT("Создание документа"),
+    SEND_DOCUMENT("Документ отправлен"),
+    SEND_SES("Ses-код отправлен"),
+    CREDIT_ISSUED("Кредит выдан"),
+    STATEMENT_DENIED("Заявка отклонена");
+
+    private String description;
+
+    Theme(String description) {
+    }
+}
Index: ms-deal/src/test/java/ru/alex/msdeal/service/DealServiceTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ms-deal/src/test/java/ru/alex/msdeal/service/DealServiceTest.java b/ms-deal/src/test/java/ru/alex/msdeal/service/DealServiceTest.java
new file mode 100644
--- /dev/null	(date 1720448314696)
+++ b/ms-deal/src/test/java/ru/alex/msdeal/service/DealServiceTest.java	(date 1720448314696)
@@ -0,0 +1,19 @@
+package ru.alex.msdeal.service;
+
+import java.util.Random;
+import org.junit.jupiter.api.Test;
+
+
+public class DealServiceTest {
+
+    @Test
+    void testSesCode() {
+        var number = new StringBuilder();
+
+        for (int i = 0; i < 6; i++) {
+            number.append(new Random().nextInt(0, 9));
+        }
+
+        System.out.println(Integer.parseInt(number.toString()));
+    }
+}
Index: ms-dossier/docker-compose.yaml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ms-dossier/docker-compose.yaml b/ms-dossier/docker-compose.yaml
new file mode 100644
--- /dev/null	(date 1720254376575)
+++ b/ms-dossier/docker-compose.yaml	(date 1720254376575)
@@ -0,0 +1,24 @@
+version: '3.7'
+
+services:
+  zookeeper:
+    image: confluentinc/cp-zookeeper:7.4.4
+    ports:
+      - "2181:2181"
+    environment:
+      ZOOKEEPER_CLIENT_PORT: 2181
+      ZOOKEEPER_TICK_TIME: 2000
+
+  kafka:
+    image: confluentinc/cp-kafka:7.4.4
+    depends_on:
+      - zookeeper
+    ports:
+      - "9092:9092"
+      - "9093:9092"
+    environment:
+      KAFKA_BROKER_ID: 1
+      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
+      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: BANK_APP:PLAINTEXT, PLAINTEXT:PLAINTEXT
+      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092, BANK_APP://localhost:9093
+      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
Index: ms-deal/src/main/java/ru/alex/msdeal/service/DealService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package ru.alex.msdeal.service;\r\n\r\nimport java.time.Instant;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport java.util.UUID;\r\nimport javax.transaction.Transactional;\r\nimport lombok.RequiredArgsConstructor;\r\nimport lombok.extern.slf4j.Slf4j;\r\nimport org.springframework.stereotype.Service;\r\nimport ru.alex.msdeal.dto.FinishRegistrationRequestDto;\r\nimport ru.alex.msdeal.dto.LoanOfferDto;\r\nimport ru.alex.msdeal.dto.LoanStatementRequestDto;\r\nimport ru.alex.msdeal.dto.ScoringDataDto;\r\nimport ru.alex.msdeal.entity.*;\r\nimport ru.alex.msdeal.entity.constant.ChangeType;\r\nimport ru.alex.msdeal.entity.constant.CreditStatus;\r\nimport ru.alex.msdeal.entity.constant.StatementStatus;\r\nimport ru.alex.msdeal.exception.StatementNotFoundException;\r\nimport ru.alex.msdeal.exception.StatementNotPreApprovedException;\r\nimport ru.alex.msdeal.mapper.ClientMapper;\r\nimport ru.alex.msdeal.mapper.CreditMapper;\r\nimport ru.alex.msdeal.mapper.EmploymentMapper;\r\nimport ru.alex.msdeal.mapper.PassportMapper;\r\nimport ru.alex.msdeal.repository.ClientRepository;\r\nimport ru.alex.msdeal.repository.CreditRepository;\r\nimport ru.alex.msdeal.repository.StatementRepository;\r\n\r\n\r\n@Slf4j\r\n@Service\r\n@RequiredArgsConstructor\r\n@Transactional\r\npublic class DealService {\r\n\r\n    private final CalculatorFeignClient calculatorFeignClient;\r\n\r\n    private final ClientRepository clientRepository;\r\n    private final StatementRepository statementRepository;\r\n    private final CreditRepository creditRepository;\r\n\r\n    private final EmploymentMapper employmentMapper;\r\n    private final ClientMapper clientMapper;\r\n    private final PassportMapper passportMapper;\r\n    private final CreditMapper creditMapper;\r\n\r\n    public List<LoanOfferDto> offer(LoanStatementRequestDto loanStatementRequestDto) {\r\n        log.info(\"Client try to take offer {}\", loanStatementRequestDto);\r\n\r\n        var clientEntity = createClientEntity(loanStatementRequestDto);\r\n        var savedClient = clientRepository.save(clientEntity);\r\n        log.info(\"Client {} {} was saved successful\", savedClient.getFirstName(), clientEntity.getLastName());\r\n\r\n        var loanOfferDtos = calculatorFeignClient.sendLoanOffer(loanStatementRequestDto);\r\n        var statement = createStatementEntity(savedClient);\r\n\r\n        loanOfferDtos.forEach(loanOfferDto -> loanOfferDto.setStatementId(statement.getId()));\r\n        log.info(\"Offer list {} was calculated successful\", loanOfferDtos);\r\n\r\n        return loanOfferDtos;\r\n    }\r\n\r\n    public void selectOffer(LoanOfferDto loanOfferDto) {\r\n        var statement = statementRepository.findById(loanOfferDto.getStatementId())\r\n            .orElseThrow(() -> new StatementNotFoundException(\"Statement №\" + loanOfferDto.getStatementId() + \" not found\"));\r\n        log.info(\"Offer {} was selected by client {} {}\", loanOfferDto.getStatementId(),\r\n            statement.getClient().getLastName(),\r\n            statement.getClient().getFirstName());\r\n\r\n        changeStatusAndHistory(statement, StatementStatus.PREAPPROVAL, \"Клиент выбрал оффер\");\r\n        saveSelectedOffer(loanOfferDto, statement);\r\n        log.info(\"Statement attribute was successful updated\");\r\n    }\r\n\r\n    public void calculate(FinishRegistrationRequestDto requestDto, String statementId) {\r\n        log.info(\"By statementId {} calculating credit offer with data {}\", statementId, requestDto);\r\n        var statement = statementRepository.findById(UUID.fromString(statementId))\r\n            .orElseThrow(() -> new StatementNotFoundException(\"Statement №\" + statementId + \" not found\"));\r\n\r\n        if (statement.getStatus() != StatementStatus.PREAPPROVAL) {\r\n            throw new StatementNotPreApprovedException(\"you not pre approved your statement\");\r\n        }\r\n\r\n        var client = statement.getClient();\r\n        var passport = updatePassportData(requestDto, client);\r\n\r\n        updateEmployment(requestDto, client, passport);\r\n\r\n        var scoringDataDto = createScoringDto(requestDto, passport, statement, client);\r\n\r\n        var creditDto = calculatorFeignClient.calculateCreditOffer(scoringDataDto);\r\n        log.info(\"Credit was calculated {}\", creditDto);\r\n\r\n        var creditEntity = creditMapper.toEntity(creditDto);\r\n        creditEntity.setCreditStatus(CreditStatus.CALCULATED);\r\n\r\n        creditRepository.save(creditEntity);\r\n        statement.setCredit(creditEntity);\r\n        statement.setSignDate(Instant.now());\r\n\r\n        changeStatusAndHistory(statement, StatementStatus.APPROVED, \"Кредит высчитан, всё хорошо\");\r\n\r\n        log.info(\"Credit was successful calculated all variables was updated\");\r\n    }\r\n\r\n    private void updateEmployment(FinishRegistrationRequestDto requestDto, Client client, Passport passport) {\r\n        var employment = employmentMapper.toEntity(requestDto.getEmploymentDto());\r\n        employment.setId(UUID.randomUUID());\r\n\r\n        client.setGender(requestDto.getGender());\r\n        client.setAccountNumber(requestDto.getAccountNumber());\r\n        client.setMaritalStatus(requestDto.getMaritalStatus());\r\n        client.setDependentAmount(requestDto.getDependentAmount());\r\n        client.setEmployment(employment);\r\n        client.setPassport(passport);\r\n    }\r\n\r\n    private Passport updatePassportData(FinishRegistrationRequestDto requestDto, Client client) {\r\n\r\n        return client.getPassport()\r\n            .toBuilder()\r\n            .issueDate(requestDto.getPassportIssueDate())\r\n            .issueBranch(requestDto.getPassportIssueBranch())\r\n            .build();\r\n    }\r\n\r\n    private Client createClientEntity(LoanStatementRequestDto loanStatementRequestDto) {\r\n        var clientEntity = clientMapper.toEntity(loanStatementRequestDto);\r\n        var passport = passportMapper.toEntity(loanStatementRequestDto);\r\n        passport.setId(UUID.randomUUID());\r\n        clientEntity.setPassport(passport);\r\n        return clientEntity;\r\n    }\r\n\r\n    private Statement createStatementEntity(Client savedClient) {\r\n        var statement = Statement.builder()\r\n            .statusHistory(new ArrayList<>())\r\n            .client(savedClient)\r\n            .sesCode(100)\r\n            .creationDate(Instant.now())\r\n            .build();\r\n\r\n        var statementEntity = statementRepository.save(statement);\r\n        statementEntity.getStatusHistory().add(StatusHistory.builder()\r\n            .changeType(ChangeType.AUTOMATIC)\r\n            .status(\"Выдан список с предварительными условиями кредита\")\r\n            .time(Instant.now())\r\n            .build());\r\n\r\n        return statementEntity;\r\n    }\r\n\r\n    private void changeStatusAndHistory(Statement statement, StatementStatus status, String statusInfo) {\r\n        statement.setStatus(status);\r\n        statement.getStatusHistory().add(StatusHistory.builder()\r\n            .changeType(ChangeType.AUTOMATIC)\r\n            .status(statusInfo)\r\n            .time(Instant.now())\r\n            .build());\r\n    }\r\n\r\n    private void saveSelectedOffer(LoanOfferDto loanOfferDto, Statement statement) {\r\n        statement.setAppliedOffer(AppliedOffer.builder()\r\n            .statementId(loanOfferDto.getStatementId())\r\n            .rate(loanOfferDto.getRate())\r\n            .term(loanOfferDto.getTerm())\r\n            .isInsuranceEnabled(loanOfferDto.getIsInsuranceEnabled())\r\n            .isSalaryClient(loanOfferDto.getIsSalaryClient())\r\n            .monthlyPayment(loanOfferDto.getMonthlyPayment())\r\n            .requestedAmount(loanOfferDto.getRequestAmount())\r\n            .totalAmount(loanOfferDto.getTotalAmount())\r\n            .build());\r\n    }\r\n\r\n    private ScoringDataDto createScoringDto(FinishRegistrationRequestDto requestDto, Passport passport, Statement statement, Client client) {\r\n        return ScoringDataDto.builder()\r\n            .gender(requestDto.getGender())\r\n            .maritalStatus(requestDto.getMaritalStatus())\r\n            .dependentAmount(requestDto.getDependentAmount())\r\n            .passportIssueDate(requestDto.getPassportIssueDate())\r\n            .passportIssueBranch(requestDto.getPassportIssueBranch())\r\n            .account(requestDto.getAccountNumber())\r\n            .employment(requestDto.getEmploymentDto())\r\n            .passportSeries(passport.getSeries())\r\n            .passportNumber(passport.getNumber())\r\n            .term(statement.getAppliedOffer().term())\r\n            .amount(statement.getAppliedOffer().requestedAmount())\r\n            .isInsuranceEnabled(statement.getAppliedOffer().isInsuranceEnabled())\r\n            .isSalaryClient(statement.getAppliedOffer().isSalaryClient())\r\n            .firstName(client.getFirstName())\r\n            .lastName(client.getLastName())\r\n            .middleName(client.getMiddleName())\r\n            .birthdate(client.getBirthdate())\r\n            .build();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ms-deal/src/main/java/ru/alex/msdeal/service/DealService.java b/ms-deal/src/main/java/ru/alex/msdeal/service/DealService.java
--- a/ms-deal/src/main/java/ru/alex/msdeal/service/DealService.java	(revision 58edfa4b19a76323309cf2b18dabee45d7db1ddd)
+++ b/ms-deal/src/main/java/ru/alex/msdeal/service/DealService.java	(date 1720448679566)
@@ -1,21 +1,21 @@
 package ru.alex.msdeal.service;
 
 import java.time.Instant;
-import java.util.ArrayList;
-import java.util.List;
-import java.util.UUID;
+import java.util.*;
 import javax.transaction.Transactional;
+import feign.FeignException;
 import lombok.RequiredArgsConstructor;
 import lombok.extern.slf4j.Slf4j;
 import org.springframework.stereotype.Service;
-import ru.alex.msdeal.dto.FinishRegistrationRequestDto;
-import ru.alex.msdeal.dto.LoanOfferDto;
-import ru.alex.msdeal.dto.LoanStatementRequestDto;
-import ru.alex.msdeal.dto.ScoringDataDto;
+import ru.alex.msdeal.config.EmailSender;
+import ru.alex.msdeal.dto.*;
 import ru.alex.msdeal.entity.*;
 import ru.alex.msdeal.entity.constant.ChangeType;
 import ru.alex.msdeal.entity.constant.CreditStatus;
 import ru.alex.msdeal.entity.constant.StatementStatus;
+import ru.alex.msdeal.entity.constant.Theme;
+import ru.alex.msdeal.exception.ClientDeniedException;
+import ru.alex.msdeal.exception.SesCodeNotEqualsException;
 import ru.alex.msdeal.exception.StatementNotFoundException;
 import ru.alex.msdeal.exception.StatementNotPreApprovedException;
 import ru.alex.msdeal.mapper.ClientMapper;
@@ -44,6 +44,8 @@
     private final PassportMapper passportMapper;
     private final CreditMapper creditMapper;
 
+    private final EmailSender emailSender;
+
     public List<LoanOfferDto> offer(LoanStatementRequestDto loanStatementRequestDto) {
         log.info("Client try to take offer {}", loanStatementRequestDto);
 
@@ -63,22 +65,29 @@
     public void selectOffer(LoanOfferDto loanOfferDto) {
         var statement = statementRepository.findById(loanOfferDto.getStatementId())
             .orElseThrow(() -> new StatementNotFoundException("Statement №" + loanOfferDto.getStatementId() + " not found"));
+
+        if (Objects.isNull(loanOfferDto.getStatementId())) {
+            updateStatusAndHistory(statement, StatementStatus.CLIENT_DENIED, "Client denied to take loan");
+            throw new ClientDeniedException("You denied loan offer");
+        }
+
         log.info("Offer {} was selected by client {} {}", loanOfferDto.getStatementId(),
             statement.getClient().getLastName(),
             statement.getClient().getFirstName());
 
-        changeStatusAndHistory(statement, StatementStatus.PREAPPROVAL, "Клиент выбрал оффер");
         saveSelectedOffer(loanOfferDto, statement);
         log.info("Statement attribute was successful updated");
+
+        updateStatusAndHistory(statement, StatementStatus.PREAPPROVAL, "Pre approval loan");
+        emailSender.sendMail(buildMessage(statement.getClient(), statement, Theme.FINISH_REGISTRATION));
     }
 
     public void calculate(FinishRegistrationRequestDto requestDto, String statementId) {
         log.info("By statementId {} calculating credit offer with data {}", statementId, requestDto);
-        var statement = statementRepository.findById(UUID.fromString(statementId))
-            .orElseThrow(() -> new StatementNotFoundException("Statement №" + statementId + " not found"));
+        var statement = getStatement(statementId);
 
         if (statement.getStatus() != StatementStatus.PREAPPROVAL) {
-            throw new StatementNotPreApprovedException("you not pre approved your statement");
+            throw new StatementNotPreApprovedException("You not pre approved your statement");
         }
 
         var client = statement.getClient();
@@ -88,35 +97,85 @@
 
         var scoringDataDto = createScoringDto(requestDto, passport, statement, client);
 
-        var creditDto = calculatorFeignClient.calculateCreditOffer(scoringDataDto);
-        log.info("Credit was calculated {}", creditDto);
+        var creditDto = new CreditDto();
+        try {
+            creditDto = calculatorFeignClient.calculateCreditOffer(scoringDataDto);
+        } catch (FeignException.FeignClientException exception) {
+            updateStatusAndHistory(statement, StatementStatus.CC_DENIED, "Loan was denied");
+            emailSender.sendMail(buildMessage(client, statement, Theme.STATEMENT_DENIED));
+            throw exception;
+        }
+
+        log.info("Credit was successful calculated {}", creditDto);
 
         var creditEntity = creditMapper.toEntity(creditDto);
         creditEntity.setCreditStatus(CreditStatus.CALCULATED);
 
-        creditRepository.save(creditEntity);
         statement.setCredit(creditEntity);
         statement.setSignDate(Instant.now());
 
-        changeStatusAndHistory(statement, StatementStatus.APPROVED, "Кредит высчитан, всё хорошо");
+        updateStatusAndHistory(statement, StatementStatus.CC_APPROVED, "Credit was calculated, all fine");
 
         log.info("Credit was successful calculated all variables was updated");
+
+        emailSender.sendMail(buildMessage(client, statement, Theme.CREATE_DOCUMENT));
+    }
+
+    public void sendDocument(String statementId) {
+        var statement = getStatement(statementId);
+
+        updateStatusAndHistory(statement, StatementStatus.PREPARE_DOCUMENTS, "Preparing documents");
+
+        emailSender.sendMail(buildMessage(statement.getClient(), statement, Theme.SEND_DOCUMENT));
+        log.info("Client: {} receive document", statement.getClient().getEmail());
+    }
+
+    public void signDocument(String statementId) {
+        var statement = getStatement(statementId);
+
+        var sesCode = createRandomSesCode();
+        statement.setSesCode(sesCode);
+
+        updateStatusAndHistory(statement, StatementStatus.DOCUMENT_CREATED, "Document was created");
+
+        emailSender.sendMail(buildMessage(statement.getClient(), statement, Theme.SEND_SES, sesCode));
+        log.info("Ses-code was sent to client: {}", statement.getClient().getEmail());
+    }
+
+    private int createRandomSesCode() {
+        var number = new StringBuilder();
+
+        for (int i = 0; i < 6; i++) {
+            number.append(new Random().nextInt(0, 9));
+        }
+
+        return Integer.parseInt(number.toString());
     }
 
-    private void updateEmployment(FinishRegistrationRequestDto requestDto, Client client, Passport passport) {
-        var employment = employmentMapper.toEntity(requestDto.getEmploymentDto());
-        employment.setId(UUID.randomUUID());
 
-        client.setGender(requestDto.getGender());
-        client.setAccountNumber(requestDto.getAccountNumber());
-        client.setMaritalStatus(requestDto.getMaritalStatus());
-        client.setDependentAmount(requestDto.getDependentAmount());
-        client.setEmployment(employment);
-        client.setPassport(passport);
+    public void signCode(SesCodeDto sesCodeDto, String statementId) {
+        var statement = getStatement(statementId);
+
+        if (statement.getSesCode().equals(sesCodeDto.getSesCode())) {
+            emailSender.sendMail(buildMessage(statement.getClient(), statement, Theme.CREDIT_ISSUED));
+        } else {
+            throw new SesCodeNotEqualsException("Sorry ses-code is not equals");
+        }
+
+        var credit = statement.getCredit();
+        credit.setCreditStatus(CreditStatus.ISSUED);
+
+        updateStatusAndHistory(statement, StatementStatus.DOCUMENT_SIGNED, "Document was signed");
+        updateStatusAndHistory(statement, StatementStatus.CREDIT_ISSUED, "Loan was taken, all fine");
+    }
+
+
+    private Statement getStatement(String statementId) {
+        return statementRepository.findById(UUID.fromString(statementId))
+            .orElseThrow(() -> new StatementNotFoundException("Statement №" + statementId + " not found"));
     }
 
     private Passport updatePassportData(FinishRegistrationRequestDto requestDto, Client client) {
-
         return client.getPassport()
             .toBuilder()
             .issueDate(requestDto.getPassportIssueDate())
@@ -136,21 +195,49 @@
         var statement = Statement.builder()
             .statusHistory(new ArrayList<>())
             .client(savedClient)
-            .sesCode(100)
             .creationDate(Instant.now())
             .build();
 
         var statementEntity = statementRepository.save(statement);
         statementEntity.getStatusHistory().add(StatusHistory.builder()
             .changeType(ChangeType.AUTOMATIC)
-            .status("Выдан список с предварительными условиями кредита")
+            .status("List with loan offer was issued")
             .time(Instant.now())
             .build());
 
         return statementEntity;
     }
 
-    private void changeStatusAndHistory(Statement statement, StatementStatus status, String statusInfo) {
+    private EmailMessage buildMessage(Client client, Statement statement, Theme theme, int sesCode) {
+        return EmailMessage.builder()
+            .address(client.getEmail())
+            .theme(theme)
+            .statementId(statement.getId())
+            .sesCode(sesCode)
+            .build();
+    }
+
+    private EmailMessage buildMessage(Client client, Statement statement, Theme theme) {
+        return EmailMessage.builder()
+            .address(client.getEmail())
+            .theme(theme)
+            .statementId(statement.getId())
+            .build();
+    }
+
+    private void updateEmployment(FinishRegistrationRequestDto requestDto, Client client, Passport passport) {
+        var employment = employmentMapper.toEntity(requestDto.getEmploymentDto());
+        employment.setId(UUID.randomUUID());
+
+        client.setGender(requestDto.getGender());
+        client.setAccountNumber(requestDto.getAccountNumber());
+        client.setMaritalStatus(requestDto.getMaritalStatus());
+        client.setDependentAmount(requestDto.getDependentAmount());
+        client.setEmployment(employment);
+        client.setPassport(passport);
+    }
+
+    private void updateStatusAndHistory(Statement statement, StatementStatus status, String statusInfo) {
         statement.setStatus(status);
         statement.getStatusHistory().add(StatusHistory.builder()
             .changeType(ChangeType.AUTOMATIC)
Index: ms-dossier/src/main/java/ru/alex/msdossier/config/MailConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ms-dossier/src/main/java/ru/alex/msdossier/config/MailConfig.java b/ms-dossier/src/main/java/ru/alex/msdossier/config/MailConfig.java
new file mode 100644
--- /dev/null	(date 1720448984792)
+++ b/ms-dossier/src/main/java/ru/alex/msdossier/config/MailConfig.java	(date 1720448984792)
@@ -0,0 +1,26 @@
+package ru.alex.msdossier.config;
+
+import org.springframework.context.annotation.Configuration;
+
+
+@Configuration
+public class MailConfig {
+
+//    @Bean
+//    public JavaMailSender getJavaMailSender() {
+//        JavaMailSenderImpl mailSender = new JavaMailSenderImpl();
+//        mailSender.setHost("smtp.gmail.com");
+//        mailSender.setPort(587);
+//
+//        mailSender.setUsername("my.gmail@gmail.com");
+//        mailSender.setPassword("password");
+//
+//        Properties props = mailSender.getJavaMailProperties();
+//        props.put("mail.transport.protocol", "smtp");
+//        props.put("mail.smtp.auth", "true");
+//        props.put("mail.smtp.starttls.enable", "true");
+//        props.put("mail.debug", "true");
+//
+//        return mailSender;
+//    }
+}
Index: ms-deal/src/main/java/ru/alex/msdeal/dto/EmailMessage.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ms-deal/src/main/java/ru/alex/msdeal/dto/EmailMessage.java b/ms-deal/src/main/java/ru/alex/msdeal/dto/EmailMessage.java
new file mode 100644
--- /dev/null	(date 1720447852097)
+++ b/ms-deal/src/main/java/ru/alex/msdeal/dto/EmailMessage.java	(date 1720447852097)
@@ -0,0 +1,10 @@
+package ru.alex.msdeal.dto;
+
+import java.util.UUID;
+import lombok.Builder;
+import ru.alex.msdeal.entity.constant.Theme;
+
+
+@Builder
+public record EmailMessage(String address, Theme theme, UUID statementId, Integer sesCode) {
+}
Index: ms-deal/src/main/java/ru/alex/msdeal/controller/ControllerAdvice.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package ru.alex.msdeal.controller;\r\n\r\nimport com.fasterxml.jackson.databind.ObjectMapper;\r\nimport feign.FeignException;\r\nimport lombok.SneakyThrows;\r\nimport lombok.extern.slf4j.Slf4j;\r\nimport org.springframework.http.HttpStatus;\r\nimport org.springframework.web.bind.annotation.ExceptionHandler;\r\nimport org.springframework.web.bind.annotation.ResponseStatus;\r\nimport org.springframework.web.bind.annotation.RestControllerAdvice;\r\nimport ru.alex.msdeal.dto.MessageError;\r\nimport ru.alex.msdeal.exception.StatementNotPreApprovedException;\r\n\r\n\r\n@Slf4j\r\n@RestControllerAdvice\r\npublic class ControllerAdvice {\r\n\r\n    @ExceptionHandler(StatementNotPreApprovedException.class)\r\n    @ResponseStatus(HttpStatus.BAD_REQUEST)\r\n    public MessageError validation(final RuntimeException e) {\r\n        log.error(\"Error description: {}\", e.getStackTrace());\r\n        return new MessageError(\"Sorry, your loan was refused: \" + e.getMessage());\r\n    }\r\n\r\n    @SneakyThrows\r\n    @ExceptionHandler(FeignException.class)\r\n    @ResponseStatus(HttpStatus.BAD_REQUEST)\r\n    public MessageError feignException(final FeignException e) {\r\n        var objectMapper = new ObjectMapper();\r\n        var errorMessage = objectMapper.readValue(e.contentUTF8(), MessageError.class);\r\n        log.error(\"Error description: {}\", e.contentUTF8());\r\n        return new MessageError(\"Validation failed.\", errorMessage.getErrors());\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ms-deal/src/main/java/ru/alex/msdeal/controller/ControllerAdvice.java b/ms-deal/src/main/java/ru/alex/msdeal/controller/ControllerAdvice.java
--- a/ms-deal/src/main/java/ru/alex/msdeal/controller/ControllerAdvice.java	(revision 58edfa4b19a76323309cf2b18dabee45d7db1ddd)
+++ b/ms-deal/src/main/java/ru/alex/msdeal/controller/ControllerAdvice.java	(date 1720432523944)
@@ -30,6 +30,6 @@
         var objectMapper = new ObjectMapper();
         var errorMessage = objectMapper.readValue(e.contentUTF8(), MessageError.class);
         log.error("Error description: {}", e.contentUTF8());
-        return new MessageError("Validation failed.", errorMessage.getErrors());
+        return new MessageError("Sorry, your loan was refused.", errorMessage.getErrors());
     }
 }
Index: ms-deal/src/main/java/ru/alex/msdeal/controller/DealController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package ru.alex.msdeal.controller;\r\n\r\nimport java.util.List;\r\nimport lombok.RequiredArgsConstructor;\r\nimport org.springframework.http.HttpStatus;\r\nimport org.springframework.http.ResponseEntity;\r\nimport org.springframework.web.bind.annotation.RestController;\r\nimport ru.alex.msdeal.api.DealApi;\r\nimport ru.alex.msdeal.dto.FinishRegistrationRequestDto;\r\nimport ru.alex.msdeal.dto.LoanOfferDto;\r\nimport ru.alex.msdeal.dto.LoanStatementRequestDto;\r\nimport ru.alex.msdeal.service.DealService;\r\n\r\n\r\n@RequiredArgsConstructor\r\n@RestController\r\npublic class DealController implements DealApi {\r\n\r\n    private final DealService dealService;\r\n\r\n    @Override\r\n    public ResponseEntity<List<LoanOfferDto>> createOffer(LoanStatementRequestDto loanStatementRequestDto) {\r\n        return ResponseEntity\r\n            .status(HttpStatus.OK)\r\n            .body(dealService.offer(loanStatementRequestDto));\r\n    }\r\n\r\n    @Override\r\n    public ResponseEntity<Void> offerSelect(LoanOfferDto loanOfferDto) {\r\n        dealService.selectOffer(loanOfferDto);\r\n        return ResponseEntity\r\n            .status(HttpStatus.OK)\r\n            .build();\r\n    }\r\n\r\n    @Override\r\n    public ResponseEntity<Void> calculate(FinishRegistrationRequestDto finishRegistrationRequestDto, String statementId) {\r\n        dealService.calculate(finishRegistrationRequestDto, statementId);\r\n        return ResponseEntity\r\n            .status(HttpStatus.OK)\r\n            .build();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ms-deal/src/main/java/ru/alex/msdeal/controller/DealController.java b/ms-deal/src/main/java/ru/alex/msdeal/controller/DealController.java
--- a/ms-deal/src/main/java/ru/alex/msdeal/controller/DealController.java	(revision 58edfa4b19a76323309cf2b18dabee45d7db1ddd)
+++ b/ms-deal/src/main/java/ru/alex/msdeal/controller/DealController.java	(date 1720449042675)
@@ -9,6 +9,7 @@
 import ru.alex.msdeal.dto.FinishRegistrationRequestDto;
 import ru.alex.msdeal.dto.LoanOfferDto;
 import ru.alex.msdeal.dto.LoanStatementRequestDto;
+import ru.alex.msdeal.dto.SesCodeDto;
 import ru.alex.msdeal.service.DealService;
 
 
@@ -40,4 +41,28 @@
             .status(HttpStatus.OK)
             .build();
     }
+
+    @Override
+    public ResponseEntity<Void> sendDocument(String statementId) {
+        dealService.sendDocument(statementId);
+        return ResponseEntity
+            .status(HttpStatus.OK)
+            .build();
+    }
+
+    @Override
+    public ResponseEntity<Void> signDocument(String statementId) {
+        dealService.signDocument(statementId);
+        return ResponseEntity
+            .status(HttpStatus.OK)
+            .build();
+    }
+
+    @Override
+    public ResponseEntity<Void> codeSign(SesCodeDto sesCodeDto, String statementId) {
+        dealService.signCode(sesCodeDto, statementId);
+        return ResponseEntity
+            .status(HttpStatus.OK)
+            .build();
+    }
 }
Index: ms-deal/src/main/java/ru/alex/msdeal/entity/constant/Theme.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ms-deal/src/main/java/ru/alex/msdeal/entity/constant/Theme.java b/ms-deal/src/main/java/ru/alex/msdeal/entity/constant/Theme.java
new file mode 100644
--- /dev/null	(date 1720423161081)
+++ b/ms-deal/src/main/java/ru/alex/msdeal/entity/constant/Theme.java	(date 1720423161081)
@@ -0,0 +1,12 @@
+package ru.alex.msdeal.entity.constant;
+
+public enum Theme {
+    FINISH_REGISTRATION("Окончание регистрации"),
+    CREATE_DOCUMENT("Создание документа"),
+    SEND_DOCUMENT("Документ отправлен"),
+    SEND_SES("Ses-код отправлен"),
+    CREDIT_ISSUED("Кредит выдан"),
+    STATEMENT_DENIED("Заявка отклонена");
+
+    Theme(String description){}
+}
