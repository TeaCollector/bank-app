Index: ms-calc/src/main/resources/application.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>spring.application.name=ms-dossier\r\n\r\nserver.port=8084\r\n\r\nspring.mail.host=smtp.gmail.com\r\nspring.mail.port=25\r\nspring.mail.username=sergeevbass@gmail.com\r\nspring.mail.password=fxtr uhja qila xugp\r\nspring.mail.properties.mail.smtp.auth=true\r\nspring.mail.properties.mail.smtp.starttls.enable=true\r\n\r\nms-deal.address=localhost:8082
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/ms-calc/src/main/resources/application.properties b/ms-calc/src/main/resources/application.properties
--- a/ms-calc/src/main/resources/application.properties	
+++ b/ms-calc/src/main/resources/application.properties	
@@ -1,12 +1,12 @@
-spring.application.name=ms-dossier
+spring.application.name=ms-calc
+server.port=8081
 
-server.port=8084
+logging.level.root=info
 
-spring.mail.host=smtp.gmail.com
-spring.mail.port=25
-spring.mail.username=sergeevbass@gmail.com
-spring.mail.password=fxtr uhja qila xugp
-spring.mail.properties.mail.smtp.auth=true
-spring.mail.properties.mail.smtp.starttls.enable=true
+springdoc.swagger-ui.path=/swagger.html
 
-ms-deal.address=localhost:8082
\ No newline at end of file
+app.main-rate=15.00
+app.base-insurance=3000
+
+app.min-age=20
+app.max-age=65
Index: ms-calc/src/main/java/ru/alex/mscalc/dto/CreditDto.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package ru.alex.mscalc.dto;\r\n\r\nimport lombok.AllArgsConstructor;\r\nimport lombok.Builder;\r\nimport lombok.Data;\r\n\r\nimport java.math.BigDecimal;\r\nimport java.util.List;\r\n\r\n@Data\r\n@AllArgsConstructor\r\n@Builder\r\n@NoArgsConstructor\r\npublic class CreditDto {\r\n\r\n    private BigDecimal amount;\r\n    private Integer term;\r\n    private BigDecimal monthlyPayment;\r\n    private BigDecimal rate;\r\n    private BigDecimal psk;\r\n    private Boolean isInsuranceEnabled;\r\n    private Boolean isSalaryClient;\r\n    private List<PaymentScheduleElementDto> paymentSchedule;\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ms-calc/src/main/java/ru/alex/mscalc/dto/CreditDto.java b/ms-calc/src/main/java/ru/alex/mscalc/dto/CreditDto.java
--- a/ms-calc/src/main/java/ru/alex/mscalc/dto/CreditDto.java	
+++ b/ms-calc/src/main/java/ru/alex/mscalc/dto/CreditDto.java	
@@ -3,6 +3,7 @@
 import lombok.AllArgsConstructor;
 import lombok.Builder;
 import lombok.Data;
+import lombok.NoArgsConstructor;
 
 import java.math.BigDecimal;
 import java.util.List;
Index: .gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/.idea/compiler.xml\r\n/.idea/encodings.xml\r\n/.idea/jarRepositories.xml\r\n/.idea/misc.xml\r\n/.idea/modules.xml\r\n/.idea/vcs.xml\r\n/.idea/workspace.xml\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.gitignore b/.gitignore
--- a/.gitignore	
+++ b/.gitignore	
@@ -1,7 +1,1 @@
-/.idea/compiler.xml
-/.idea/encodings.xml
-/.idea/jarRepositories.xml
-/.idea/misc.xml
-/.idea/modules.xml
-/.idea/vcs.xml
-/.idea/workspace.xml
+.idea/
Index: ms-calc/src/main/java/ru/alex/msdeal/config/EmailSender.java
===================================================================
diff --git a/ms-calc/src/main/java/ru/alex/msdeal/config/EmailSender.java b/ms-calc/src/main/java/ru/alex/msdeal/config/EmailSender.java
deleted file mode 100644
--- a/ms-calc/src/main/java/ru/alex/msdeal/config/EmailSender.java	
+++ /dev/null	
@@ -1,21 +0,0 @@
-package ru.alex.msdeal.config;
-
-import lombok.RequiredArgsConstructor;
-import lombok.extern.slf4j.Slf4j;
-import org.springframework.kafka.core.KafkaTemplate;
-import org.springframework.stereotype.Component;
-import ru.alex.msdeal.dto.EmailMessage;
-
-
-@Slf4j
-@Component
-@RequiredArgsConstructor
-public class EmailSender {
-
-    private final KafkaTemplate<String, EmailMessage> kafkaTemplate;
-
-    public void sendMail(EmailMessage message) {
-        kafkaTemplate.send(message.theme().name(), message);
-        log.info("Message {} was send to topic {}", message, message.theme().name());
-    }
-}
Index: ms-calc/src/main/java/ru/alex/msdeal/config/KafkaProducerConfig.java
===================================================================
diff --git a/ms-calc/src/main/java/ru/alex/msdeal/config/KafkaProducerConfig.java b/ms-calc/src/main/java/ru/alex/msdeal/config/KafkaProducerConfig.java
deleted file mode 100644
--- a/ms-calc/src/main/java/ru/alex/msdeal/config/KafkaProducerConfig.java	
+++ /dev/null	
@@ -1,49 +0,0 @@
-package ru.alex.msdeal.config;
-
-import java.util.ArrayList;
-import java.util.HashMap;
-import org.apache.kafka.clients.admin.NewTopic;
-import org.apache.kafka.clients.producer.ProducerConfig;
-import org.apache.kafka.common.serialization.StringSerializer;
-import org.springframework.context.annotation.Bean;
-import org.springframework.context.annotation.Configuration;
-import org.springframework.kafka.core.DefaultKafkaProducerFactory;
-import org.springframework.kafka.core.KafkaAdmin;
-import org.springframework.kafka.core.KafkaTemplate;
-import org.springframework.kafka.core.ProducerFactory;
-import org.springframework.kafka.support.serializer.JsonSerializer;
-import ru.alex.msdeal.dto.EmailMessage;
-import ru.alex.msdeal.entity.constant.Theme;
-
-
-@Configuration
-public class KafkaProducerConfig {
-
-    @Bean
-    public ProducerFactory<String, EmailMessage> producerFactory() {
-        var kafkaProperties = new HashMap<String, Object>();
-
-        kafkaProperties.put(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, "localhost:9092");
-        kafkaProperties.put(ProducerConfig.KEY_SERIALIZER_CLASS_CONFIG, StringSerializer.class);
-        kafkaProperties.put(ProducerConfig.VALUE_SERIALIZER_CLASS_CONFIG, JsonSerializer.class);
-
-        return new DefaultKafkaProducerFactory<>(kafkaProperties);
-    }
-
-    @Bean
-    public KafkaTemplate<String, EmailMessage> kafkaTemplate() {
-        return new KafkaTemplate<>(producerFactory());
-    }
-
-    @Bean
-    public KafkaAdmin.NewTopics createKafkaTopics() {
-        var newTopics = new ArrayList<NewTopic>();
-
-        for (Theme theme : Theme.values()) {
-            newTopics.add(new NewTopic(theme.name(), 5, (short) 3));
-        }
-
-        return new KafkaAdmin.NewTopics(newTopics.toArray(NewTopic[]::new));
-    }
-}
-
Index: ms-calc/src/main/java/ru/alex/msdeal/dto/EmailMessage.java
===================================================================
diff --git a/ms-calc/src/main/java/ru/alex/msdeal/dto/EmailMessage.java b/ms-calc/src/main/java/ru/alex/msdeal/dto/EmailMessage.java
deleted file mode 100644
--- a/ms-calc/src/main/java/ru/alex/msdeal/dto/EmailMessage.java	
+++ /dev/null	
@@ -1,10 +0,0 @@
-package ru.alex.msdeal.dto;
-
-import java.util.UUID;
-import lombok.Builder;
-import ru.alex.msdeal.entity.constant.Theme;
-
-
-@Builder
-public record EmailMessage(String address, Theme theme, UUID statementId, Integer sesCode) {
-}
Index: ms-calc/src/main/java/ru/alex/msdeal/exception/SesCodeNotEqualsException.java
===================================================================
diff --git a/ms-calc/src/main/java/ru/alex/msdeal/exception/SesCodeNotEqualsException.java b/ms-calc/src/main/java/ru/alex/msdeal/exception/SesCodeNotEqualsException.java
deleted file mode 100644
--- a/ms-calc/src/main/java/ru/alex/msdeal/exception/SesCodeNotEqualsException.java	
+++ /dev/null	
@@ -1,7 +0,0 @@
-package ru.alex.msdeal.exception;
-
-public class SesCodeNotEqualsException extends RuntimeException {
-    public SesCodeNotEqualsException(String message) {
-        super(message);
-    }
-}
Index: ms-calc/src/main/java/ru/alex/msdossier/config/MailConfig.java
===================================================================
diff --git a/ms-calc/src/main/java/ru/alex/msdossier/config/MailConfig.java b/ms-calc/src/main/java/ru/alex/msdossier/config/MailConfig.java
deleted file mode 100644
--- a/ms-calc/src/main/java/ru/alex/msdossier/config/MailConfig.java	
+++ /dev/null	
@@ -1,26 +0,0 @@
-package ru.alex.msdossier.config;
-
-import org.springframework.context.annotation.Configuration;
-
-
-@Configuration
-public class MailConfig {
-
-//    @Bean
-//    public JavaMailSender getJavaMailSender() {
-//        JavaMailSenderImpl mailSender = new JavaMailSenderImpl();
-//        mailSender.setHost("smtp.gmail.com");
-//        mailSender.setPort(587);
-//
-//        mailSender.setUsername("my.gmail@gmail.com");
-//        mailSender.setPassword("password");
-//
-//        Properties props = mailSender.getJavaMailProperties();
-//        props.put("mail.transport.protocol", "smtp");
-//        props.put("mail.smtp.auth", "true");
-//        props.put("mail.smtp.starttls.enable", "true");
-//        props.put("mail.debug", "true");
-//
-//        return mailSender;
-//    }
-}
Index: ms-calc/src/main/java/ru/alex/msdossier/service/EmailKafkaListener.java
===================================================================
diff --git a/ms-calc/src/main/java/ru/alex/msdossier/service/EmailKafkaListener.java b/ms-calc/src/main/java/ru/alex/msdossier/service/EmailKafkaListener.java
deleted file mode 100644
--- a/ms-calc/src/main/java/ru/alex/msdossier/service/EmailKafkaListener.java	
+++ /dev/null	
@@ -1,116 +0,0 @@
-package ru.alex.msdossier.service;
-
-import java.io.IOException;
-import java.nio.file.Files;
-import java.nio.file.Path;
-import jakarta.mail.MessagingException;
-import lombok.RequiredArgsConstructor;
-import lombok.extern.log4j.Log4j2;
-import org.springframework.beans.factory.annotation.Value;
-import org.springframework.core.io.ByteArrayResource;
-import org.springframework.kafka.annotation.KafkaListener;
-import org.springframework.mail.SimpleMailMessage;
-import org.springframework.mail.javamail.JavaMailSender;
-import org.springframework.mail.javamail.MimeMessageHelper;
-import org.springframework.scheduling.annotation.Async;
-import org.springframework.stereotype.Service;
-import ru.alex.msdossier.dto.EmailMessage;
-import ru.alex.msdossier.dto.constant.Theme;
-
-
-@Log4j2
-@Service
-@RequiredArgsConstructor
-public class EmailKafkaListener {
-
-    private final JavaMailSender mailSender;
-
-    @Value("${ms-deal.address}")
-    private String msDealAddress;
-
-    @Async
-    @KafkaListener(topics = { "FINISH_REGISTRATION" }, groupId = "email-sender")
-    public void sendEmailFinishRegistration(EmailMessage message) {
-        var mailMessage = new SimpleMailMessage();
-        mailMessage.setTo(message.address());
-        mailMessage.setSubject(Theme.FINISH_REGISTRATION.name());
-        mailMessage.setText("Ваша заявка предварительно одобрена, завершите оформление");
-
-        mailSender.send(mailMessage);
-
-        log.info("Message with theme: {}, was sent to: {}", message.theme(), message.address());
-    }
-
-    @Async
-    @KafkaListener(topics = "CREATE_DOCUMENT", groupId = "email-sender")
-    public void sendEmailCreateDocument(EmailMessage message) {
-        var mailMessage = new SimpleMailMessage();
-        mailMessage.setTo(message.address());
-        mailMessage.setSubject(Theme.CREATE_DOCUMENT.name());
-        mailMessage.setText("<a href=\"http://%s/deal/document/%s/send\">Ссылка на формирование документов</a>"
-            .formatted(msDealAddress, message.statementId()));
-
-        mailSender.send(mailMessage);
-
-        log.info("Message with theme: {}, was sent to: {}", message.theme(), message.address());
-    }
-
-    @Async
-    @KafkaListener(topics = "SEND_DOCUMENT", groupId = "email-sender")
-    public void sendEmailSendDocument(EmailMessage message) throws MessagingException, IOException {
-        var mimeMessage = mailSender.createMimeMessage();
-        var mimeMessageHelper = new MimeMessageHelper(mimeMessage, true);
-
-        mimeMessageHelper.setTo(message.address());
-        mimeMessageHelper.setSubject(Theme.FINISH_REGISTRATION.name());
-        mimeMessageHelper.setText(("Документы для ознакомления находятся в письме." +
-                                   "\nЕсли вы согласны, пожалуйста перейдите по это ссылке: " +
-                                   "<a href=\"http://%s/deal/document/%s/sign\">подписать документы</a>").formatted(msDealAddress, message.statementId()));
-        mimeMessageHelper.addAttachment("agreement.txt",
-            new ByteArrayResource(Files.readAllBytes(Path.of("ms-dossier/src/main/resources/agreement.txt"))));
-
-        mailSender.send(mimeMessage);
-
-        log.info("Message with theme: {}, was sent to: {}", message.theme(), message.address());
-    }
-
-    @Async
-    @KafkaListener(topics = "SEND_SES", groupId = "email-sender")
-    public void sendEmailSesCode(EmailMessage message) {
-        var mailMessage = new SimpleMailMessage();
-        mailMessage.setTo(message.address());
-        mailMessage.setSubject(Theme.SEND_SES.name());
-        mailMessage.setText(("Для подтверждения подписания документов отправьте этот код: %d\n" +
-                             "<a href=\"http://%s/deal/document/%s/code\">На этот адрес</a>").formatted(message.sesCode(), msDealAddress, message.statementId()));
-
-        mailSender.send(mailMessage);
-
-        log.info("Message with theme: {}, was sent to: {}", message.theme(), message.address());
-    }
-
-    @Async
-    @KafkaListener(topics = "CREDIT_ISSUED", groupId = "email-sender")
-    public void sendEmailCreditIssued(EmailMessage message) {
-        var mailMessage = new SimpleMailMessage();
-        mailMessage.setTo(message.address());
-        mailMessage.setSubject(Theme.STATEMENT_DENIED.name());
-        mailMessage.setText("Поздравляю вы взяли вредит!!!");
-
-        mailSender.send(mailMessage);
-
-        log.info("Message with theme: {}, was sent to: {}", message.theme(), message.address());
-    }
-
-    @Async
-    @KafkaListener(topics = "STATEMENT_DENIED", groupId = "email-sender")
-    public void sendEmailStatementDenied(EmailMessage message) {
-        var mailMessage = new SimpleMailMessage();
-        mailMessage.setTo(message.address());
-        mailMessage.setSubject(Theme.STATEMENT_DENIED.name());
-        mailMessage.setText("Ваша заявка отклонена");
-
-        mailSender.send(mailMessage);
-
-        log.info("Message with theme: {}, was sent to: {}", message.theme(), message.address());
-    }
-}
Index: ms-calc/src/main/java/ru/alex/msdeal/entity/constant/Theme.java
===================================================================
diff --git a/ms-calc/src/main/java/ru/alex/msdeal/entity/constant/Theme.java b/ms-calc/src/main/java/ru/alex/msdeal/entity/constant/Theme.java
deleted file mode 100644
--- a/ms-calc/src/main/java/ru/alex/msdeal/entity/constant/Theme.java	
+++ /dev/null	
@@ -1,12 +0,0 @@
-package ru.alex.msdeal.entity.constant;
-
-public enum Theme {
-    FINISH_REGISTRATION("Окончание регистрации"),
-    CREATE_DOCUMENT("Создание документа"),
-    SEND_DOCUMENT("Документ отправлен"),
-    SEND_SES("Ses-код отправлен"),
-    CREDIT_ISSUED("Кредит выдан"),
-    STATEMENT_DENIED("Заявка отклонена");
-
-    Theme(String description){}
-}
Index: ms-calc/src/main/java/ru/alex/msdeal/exception/ClientDeniedException.java
===================================================================
diff --git a/ms-calc/src/main/java/ru/alex/msdeal/exception/ClientDeniedException.java b/ms-calc/src/main/java/ru/alex/msdeal/exception/ClientDeniedException.java
deleted file mode 100644
--- a/ms-calc/src/main/java/ru/alex/msdeal/exception/ClientDeniedException.java	
+++ /dev/null	
@@ -1,7 +0,0 @@
-package ru.alex.msdeal.exception;
-
-public class ClientDeniedException extends RuntimeException {
-    public ClientDeniedException(String msg) {
-        super(msg);
-    }
-}
Index: ms-calc/src/main/java/ru/alex/msdossier/MsDossierApplication.java
===================================================================
diff --git a/ms-calc/src/main/java/ru/alex/msdossier/MsDossierApplication.java b/ms-calc/src/main/java/ru/alex/msdossier/MsDossierApplication.java
deleted file mode 100644
--- a/ms-calc/src/main/java/ru/alex/msdossier/MsDossierApplication.java	
+++ /dev/null	
@@ -1,16 +0,0 @@
-package ru.alex.msdossier;
-
-import org.springframework.boot.SpringApplication;
-import org.springframework.boot.autoconfigure.SpringBootApplication;
-import org.springframework.scheduling.annotation.EnableAsync;
-
-
-@EnableAsync
-@SpringBootApplication
-public class MsDossierApplication {
-
-	public static void main(String[] args) {
-		SpringApplication.run(MsDossierApplication.class, args);
-	}
-
-}
Index: ms-calc/src/main/java/ru/alex/msdossier/dto/EmailMessage.java
===================================================================
diff --git a/ms-calc/src/main/java/ru/alex/msdossier/dto/EmailMessage.java b/ms-calc/src/main/java/ru/alex/msdossier/dto/EmailMessage.java
deleted file mode 100644
--- a/ms-calc/src/main/java/ru/alex/msdossier/dto/EmailMessage.java	
+++ /dev/null	
@@ -1,8 +0,0 @@
-package ru.alex.msdossier.dto;
-
-import java.util.UUID;
-import ru.alex.msdossier.dto.constant.Theme;
-
-
-public record EmailMessage(String address, Theme theme, UUID statementId, Integer sesCode) {
-}
Index: ms-calc/src/main/java/ru/alex/msdeal/dto/SesCodeDto.java
===================================================================
diff --git a/ms-calc/src/main/java/ru/alex/msdeal/dto/SesCodeDto.java b/ms-calc/src/main/java/ru/alex/msdeal/dto/SesCodeDto.java
deleted file mode 100644
--- a/ms-calc/src/main/java/ru/alex/msdeal/dto/SesCodeDto.java	
+++ /dev/null	
@@ -1,13 +0,0 @@
-package ru.alex.msdeal.dto;
-
-import javax.validation.constraints.NotNull;
-import lombok.Getter;
-import lombok.Setter;
-
-
-@Setter
-@Getter
-public class SesCodeDto {
-    @NotNull
-    private int sesCode;
-}
Index: ms-calc/src/main/java/ru/alex/msdossier/config/KafkaConsumerConfig.java
===================================================================
diff --git a/ms-calc/src/main/java/ru/alex/msdossier/config/KafkaConsumerConfig.java b/ms-calc/src/main/java/ru/alex/msdossier/config/KafkaConsumerConfig.java
deleted file mode 100644
--- a/ms-calc/src/main/java/ru/alex/msdossier/config/KafkaConsumerConfig.java	
+++ /dev/null	
@@ -1,46 +0,0 @@
-package ru.alex.msdossier.config;
-
-import java.util.HashMap;
-import org.apache.kafka.clients.consumer.ConsumerConfig;
-import org.apache.kafka.common.serialization.StringDeserializer;
-import org.springframework.context.annotation.Bean;
-import org.springframework.context.annotation.Configuration;
-import org.springframework.kafka.config.ConcurrentKafkaListenerContainerFactory;
-import org.springframework.kafka.core.ConsumerFactory;
-import org.springframework.kafka.core.DefaultKafkaConsumerFactory;
-import org.springframework.kafka.support.serializer.JsonDeserializer;
-import ru.alex.msdossier.dto.EmailMessage;
-
-
-@Configuration
-public class KafkaConsumerConfig {
-
-    @Bean
-    public ConsumerFactory<String, EmailMessage> consumerFactory() {
-        var consumerProperties = new HashMap<String, Object>();
-
-        consumerProperties.put(ConsumerConfig.BOOTSTRAP_SERVERS_CONFIG, "localhost:9092");
-        consumerProperties.put(ConsumerConfig.KEY_DESERIALIZER_CLASS_CONFIG, StringDeserializer.class);
-        consumerProperties.put(ConsumerConfig.VALUE_DESERIALIZER_CLASS_CONFIG, JsonDeserializer.class);
-        consumerProperties.put(ConsumerConfig.GROUP_ID_CONFIG, "email-sender");
-        consumerProperties.put(ConsumerConfig.AUTO_OFFSET_RESET_CONFIG, "earliest");
-        consumerProperties.put(ConsumerConfig.ENABLE_AUTO_COMMIT_CONFIG, false);
-        consumerProperties.put(JsonDeserializer.USE_TYPE_INFO_HEADERS, false);
-
-        var emailMessageJsonDeserializer = new JsonDeserializer<>(EmailMessage.class);
-
-        return new DefaultKafkaConsumerFactory<>(
-            consumerProperties,
-            new StringDeserializer(),
-            emailMessageJsonDeserializer
-        );
-    }
-
-    @Bean
-    public ConcurrentKafkaListenerContainerFactory<String, EmailMessage> kafkaListenerContainerFactory() {
-        var factory = new ConcurrentKafkaListenerContainerFactory<String, EmailMessage>();
-        factory.setConsumerFactory(consumerFactory());
-
-        return factory;
-    }
-}
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
deleted file mode 100644
--- a/.idea/vcs.xml	
+++ /dev/null	
@@ -1,6 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="VcsDirectoryMappings">
-    <mapping directory="" vcs="Git" />
-  </component>
-</project>
\ No newline at end of file
Index: .idea/uiDesigner.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/uiDesigner.xml b/.idea/uiDesigner.xml
deleted file mode 100644
--- a/.idea/uiDesigner.xml	
+++ /dev/null	
@@ -1,124 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="Palette2">
-    <group name="Swing">
-      <item class="com.intellij.uiDesigner.HSpacer" tooltip-text="Horizontal Spacer" icon="/com/intellij/uiDesigner/icons/hspacer.svg" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="1" hsize-policy="6" anchor="0" fill="1" />
-      </item>
-      <item class="com.intellij.uiDesigner.VSpacer" tooltip-text="Vertical Spacer" icon="/com/intellij/uiDesigner/icons/vspacer.svg" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="6" hsize-policy="1" anchor="0" fill="2" />
-      </item>
-      <item class="javax.swing.JPanel" icon="/com/intellij/uiDesigner/icons/panel.svg" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3" />
-      </item>
-      <item class="javax.swing.JScrollPane" icon="/com/intellij/uiDesigner/icons/scrollPane.svg" removable="false" auto-create-binding="false" can-attach-label="true">
-        <default-constraints vsize-policy="7" hsize-policy="7" anchor="0" fill="3" />
-      </item>
-      <item class="javax.swing.JButton" icon="/com/intellij/uiDesigner/icons/button.svg" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="3" anchor="0" fill="1" />
-        <initial-values>
-          <property name="text" value="Button" />
-        </initial-values>
-      </item>
-      <item class="javax.swing.JRadioButton" icon="/com/intellij/uiDesigner/icons/radioButton.svg" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
-        <initial-values>
-          <property name="text" value="RadioButton" />
-        </initial-values>
-      </item>
-      <item class="javax.swing.JCheckBox" icon="/com/intellij/uiDesigner/icons/checkBox.svg" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
-        <initial-values>
-          <property name="text" value="CheckBox" />
-        </initial-values>
-      </item>
-      <item class="javax.swing.JLabel" icon="/com/intellij/uiDesigner/icons/label.svg" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="0" anchor="8" fill="0" />
-        <initial-values>
-          <property name="text" value="Label" />
-        </initial-values>
-      </item>
-      <item class="javax.swing.JTextField" icon="/com/intellij/uiDesigner/icons/textField.svg" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
-          <preferred-size width="150" height="-1" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JPasswordField" icon="/com/intellij/uiDesigner/icons/passwordField.svg" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
-          <preferred-size width="150" height="-1" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JFormattedTextField" icon="/com/intellij/uiDesigner/icons/formattedTextField.svg" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
-          <preferred-size width="150" height="-1" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JTextArea" icon="/com/intellij/uiDesigner/icons/textArea.svg" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
-          <preferred-size width="150" height="50" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JTextPane" icon="/com/intellij/uiDesigner/icons/textPane.svg" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
-          <preferred-size width="150" height="50" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JEditorPane" icon="/com/intellij/uiDesigner/icons/editorPane.svg" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
-          <preferred-size width="150" height="50" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JComboBox" icon="/com/intellij/uiDesigner/icons/comboBox.svg" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="0" hsize-policy="2" anchor="8" fill="1" />
-      </item>
-      <item class="javax.swing.JTable" icon="/com/intellij/uiDesigner/icons/table.svg" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
-          <preferred-size width="150" height="50" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JList" icon="/com/intellij/uiDesigner/icons/list.svg" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="6" hsize-policy="2" anchor="0" fill="3">
-          <preferred-size width="150" height="50" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JTree" icon="/com/intellij/uiDesigner/icons/tree.svg" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
-          <preferred-size width="150" height="50" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JTabbedPane" icon="/com/intellij/uiDesigner/icons/tabbedPane.svg" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
-          <preferred-size width="200" height="200" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JSplitPane" icon="/com/intellij/uiDesigner/icons/splitPane.svg" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
-          <preferred-size width="200" height="200" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JSpinner" icon="/com/intellij/uiDesigner/icons/spinner.svg" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
-      </item>
-      <item class="javax.swing.JSlider" icon="/com/intellij/uiDesigner/icons/slider.svg" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
-      </item>
-      <item class="javax.swing.JSeparator" icon="/com/intellij/uiDesigner/icons/separator.svg" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3" />
-      </item>
-      <item class="javax.swing.JProgressBar" icon="/com/intellij/uiDesigner/icons/progressbar.svg" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1" />
-      </item>
-      <item class="javax.swing.JToolBar" icon="/com/intellij/uiDesigner/icons/toolbar.svg" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1">
-          <preferred-size width="-1" height="20" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JToolBar$Separator" icon="/com/intellij/uiDesigner/icons/toolbarSeparator.svg" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="0" anchor="0" fill="1" />
-      </item>
-      <item class="javax.swing.JScrollBar" icon="/com/intellij/uiDesigner/icons/scrollbar.svg" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="6" hsize-policy="0" anchor="0" fill="2" />
-      </item>
-    </group>
-  </component>
-</project>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
deleted file mode 100644
--- a/.idea/misc.xml	
+++ /dev/null	
@@ -1,18 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="ExternalStorageConfigurationManager" enabled="true" />
-  <component name="MavenProjectsManager">
-    <option name="originalFiles">
-      <list>
-        <option value="$PROJECT_DIR$/ms-calc/pom.xml" />
-      </list>
-    </option>
-  </component>
-  <component name="PWA">
-    <option name="enabled" value="true" />
-    <option name="wasEnabledAtLeastOnce" value="true" />
-  </component>
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_17" default="true" project-jdk-name="17" project-jdk-type="JavaSDK">
-    <output url="file://$PROJECT_DIR$/out" />
-  </component>
-</project>
\ No newline at end of file
Index: ms-calc/src/main/java/ru/alex/msdossier/dto/constant/Theme.java
===================================================================
diff --git a/ms-calc/src/main/java/ru/alex/msdossier/dto/constant/Theme.java b/ms-calc/src/main/java/ru/alex/msdossier/dto/constant/Theme.java
deleted file mode 100644
--- a/ms-calc/src/main/java/ru/alex/msdossier/dto/constant/Theme.java	
+++ /dev/null	
@@ -1,19 +0,0 @@
-package ru.alex.msdossier.dto.constant;
-
-import lombok.Getter;
-
-
-@Getter
-public enum Theme {
-    FINISH_REGISTRATION("Окончание регистрации"),
-    CREATE_DOCUMENT("Создание документа"),
-    SEND_DOCUMENT("Документ отправлен"),
-    SEND_SES("Ses-код отправлен"),
-    CREDIT_ISSUED("Кредит выдан"),
-    STATEMENT_DENIED("Заявка отклонена");
-
-    private String description;
-
-    Theme(String description) {
-    }
-}
Index: ms-calc/src/main/java/ru/alex/mscalc/service/EmploymentService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package ru.alex.mscalc.service;\r\n\r\nimport java.math.BigDecimal;\r\nimport lombok.RequiredArgsConstructor;\r\nimport lombok.extern.slf4j.Slf4j;\r\nimport org.springframework.stereotype.Service;\r\nimport ru.alex.mscalc.dto.EmploymentDto;\r\nimport ru.alex.mscalc.exception.CurrentWorkExperienceException;\r\nimport ru.alex.mscalc.exception.TooLittleSalaryException;\r\nimport ru.alex.mscalc.exception.TotalWorkExperienceException;\r\nimport ru.alex.mscalc.exception.UnemployedException;\r\n\r\n\r\n@Slf4j\r\n@Service\r\n@RequiredArgsConstructor\r\npublic class EmploymentService {\r\n\r\n    private static final Integer SALARY_MIN = 15;\r\n\r\n    public BigDecimal calculateRateByEmployment(EmploymentDto employmentDto, BigDecimal amount, BigDecimal mainRate) {\r\n        log.info(\"Calculate rate by {}, amount: {}, main rate: {}\", employmentDto, amount, mainRate);\r\n        var rate = mainRate;\r\n        switch (employmentDto.getEmploymentStatus()) {\r\n            case WORKER -> rate = rate.add(BigDecimal.valueOf(1.00d));\r\n            case EMPLOYEE -> rate = rate.add(BigDecimal.valueOf(2.00d));\r\n            case SELF_EMPLOYED -> rate = rate.add(BigDecimal.valueOf(0.50d));\r\n            case UNEMPLOYED -> {\r\n                log.warn(\"Client is not working: reject\");\r\n                throw new UnemployedException(\"Sorry, we can't give loan to unemployed\");\r\n            }\r\n        }\r\n        log.info(\"Rate after employment status: {}\", rate);\r\n\r\n        switch (employmentDto.getPosition()) {\r\n            case SIMPLE_MANAGER -> rate = rate.add(BigDecimal.valueOf(1.00d));\r\n            case ADMINISTRATOR -> rate = rate.add(BigDecimal.valueOf(1.50d));\r\n            case TOP_MANAGER -> rate = rate.add(BigDecimal.valueOf(3.00d));\r\n            case CFO -> rate = rate.add(BigDecimal.valueOf(4.00d));\r\n            case CEO -> rate = rate.add(BigDecimal.valueOf(5.50d));\r\n        }\r\n\r\n        if (employmentDto.getWorkExperienceTotal() < 18) {\r\n            log.warn(\"Client total working experience less 18 month: reject\");\r\n            throw new TotalWorkExperienceException(\"Sorry, your total experience less 18 month\");\r\n        }\r\n\r\n        if (employmentDto.getWorkExperienceCurrent() < 3) {\r\n            log.warn(\"Client current working experience less 3 month: reject\");\r\n            throw new CurrentWorkExperienceException(\"Sorry, your current work experience less 3 month\");\r\n        }\r\n\r\n        if (amount.doubleValue() > employmentDto.getSalary().multiply(BigDecimal.valueOf(SALARY_MIN)).doubleValue()) {\r\n            log.warn(\"Client salary to little: reject\");\r\n            throw new TooLittleSalaryException(\"Sorry, you have to little salary for this amount\");\r\n        }\r\n        log.info(\"Rate after employment position: {}\", rate);\r\n        return rate;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ms-calc/src/main/java/ru/alex/mscalc/service/EmploymentService.java b/ms-calc/src/main/java/ru/alex/mscalc/service/EmploymentService.java
--- a/ms-calc/src/main/java/ru/alex/mscalc/service/EmploymentService.java	
+++ b/ms-calc/src/main/java/ru/alex/mscalc/service/EmploymentService.java	
@@ -23,7 +23,7 @@
         var rate = mainRate;
         switch (employmentDto.getEmploymentStatus()) {
             case WORKER -> rate = rate.add(BigDecimal.valueOf(1.00d));
-            case EMPLOYEE -> rate = rate.add(BigDecimal.valueOf(2.00d));
+            case EMPLOYED -> rate = rate.add(BigDecimal.valueOf(2.00d));
             case SELF_EMPLOYED -> rate = rate.add(BigDecimal.valueOf(0.50d));
             case UNEMPLOYED -> {
                 log.warn("Client is not working: reject");
Index: ms-calc/src/main/java/ru/alex/mscalc/entity/constant/EmploymentStatus.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package ru.alex.mscalc.entity.constant;\r\n\r\npublic enum EmploymentStatus {\r\n    WORKER(\"Работник\"),\r\n    EMPLOYEE(\"Сотрудник\"),\r\n    SELF_EMPLOYED(\"Самозанятый\"),\r\n    UNEMPLOYED(\"Безработный\");\r\n\r\n    EmploymentStatus(String description) {\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ms-calc/src/main/java/ru/alex/mscalc/entity/constant/EmploymentStatus.java b/ms-calc/src/main/java/ru/alex/mscalc/entity/constant/EmploymentStatus.java
--- a/ms-calc/src/main/java/ru/alex/mscalc/entity/constant/EmploymentStatus.java	
+++ b/ms-calc/src/main/java/ru/alex/mscalc/entity/constant/EmploymentStatus.java	
@@ -2,7 +2,7 @@
 
 public enum EmploymentStatus {
     WORKER("Работник"),
-    EMPLOYEE("Сотрудник"),
+    EMPLOYED("Сотрудник"),
     SELF_EMPLOYED("Самозанятый"),
     UNEMPLOYED("Безработный");
 
Index: ms-calc/src/test/java/ru/alex/mscalc/web/api/CalculatorControllerTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package ru.alex.mscalc.web.api;\r\n\r\nimport lombok.SneakyThrows;\r\nimport org.junit.jupiter.api.BeforeEach;\r\nimport org.junit.jupiter.api.DisplayName;\r\nimport org.junit.jupiter.api.Test;\r\nimport org.junit.jupiter.api.extension.ExtendWith;\r\nimport org.mockito.junit.jupiter.MockitoExtension;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTest;\r\nimport org.springframework.boot.test.mock.mockito.MockBean;\r\nimport org.springframework.http.MediaType;\r\nimport org.springframework.test.web.servlet.MockMvc;\r\nimport org.springframework.web.bind.MethodArgumentNotValidException;\r\nimport ru.alex.mscalc.dto.LoanOfferDto;\r\nimport ru.alex.mscalc.dto.LoanStatementRequestDto;\r\nimport ru.alex.mscalc.exception.TooLittleSalaryException;\r\nimport ru.alex.mscalc.service.CalculatorService;\r\n\r\nimport java.util.List;\r\n\r\nimport static org.junit.jupiter.api.Assertions.*;\r\nimport static org.mockito.ArgumentMatchers.any;\r\nimport static org.mockito.Mockito.when;\r\nimport static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;\r\nimport static org.springframework.test.web.servlet.result.MockMvcResultMatchers.jsonPath;\r\nimport static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;\r\n\r\n\r\n@WebMvcTest\r\n@ExtendWith(MockitoExtension.class)\r\nclass CalculatorControllerTest {\r\n\r\n    @MockBean\r\n    CalculatorService calculatorService;\r\n\r\n    @Autowired\r\n    MockMvc mockMvc;\r\n\r\n    @BeforeEach\r\n    void init() {\r\n        when(calculatorService.scoreData(any())).thenReturn(any());\r\n        when(calculatorService.offer(new LoanStatementRequestDto())).thenReturn(List.of(new LoanOfferDto(), new LoanOfferDto(),\r\n                new LoanOfferDto(), new LoanOfferDto()));\r\n    }\r\n\r\n\r\n    @Test\r\n    @DisplayName(\"Receive correct data size\")\r\n    @SneakyThrows\r\n    void correctDataSize() {\r\n        var loanStatementRequestDto = String.format(getLoanStatementRequest(), \"\\\"Alexandr\\\"\", \"\\\"sasha@mail.com\\\"\", \"\\\"1992-05-21\\\"\");\r\n\r\n        mockMvc.perform(post(\"/calculator/offers\")\r\n                        .contentType(MediaType.APPLICATION_JSON)\r\n                        .content(loanStatementRequestDto))\r\n\r\n                .andExpect(status().isOk())\r\n                .andExpect(jsonPath(\"$.length()\").value(4));\r\n    }\r\n\r\n    @Test\r\n    @DisplayName(\"Receive incorrect data size\")\r\n    @SneakyThrows\r\n    void inCorrectDataSize() {\r\n        var loanStatementRequestDto = String.format(getLoanStatementRequest(), \"\\\"Alexandr\\\"\", \"\\\"sasha@mail.com\\\"\", \"\\\"1992-05-21\\\"\");\r\n\r\n        mockMvc.perform(post(\"/calculator/offers\")\r\n                        .contentType(MediaType.APPLICATION_JSON)\r\n                        .content(loanStatementRequestDto))\r\n\r\n                .andExpect(status().isOk())\r\n                .andExpect((result) -> assertNotEquals(2, result.getResponse().getContentLength()));\r\n    }\r\n\r\n    @Test\r\n    @DisplayName(\"Return correct exception\")\r\n    @SneakyThrows\r\n    void correctException() {\r\n        var loanStatementRequestDto = String.format(getLoanStatementRequest(), \"\\\"Alexandr\\\"\", \"\\\"bala-bala\\\"\", \"\\\"1992-05-21\\\"\");\r\n\r\n        mockMvc.perform(post(\"/calculator/offers\")\r\n                        .contentType(MediaType.APPLICATION_JSON)\r\n                        .content(loanStatementRequestDto))\r\n\r\n                .andExpect(status().isBadRequest())\r\n                .andExpect(result -> assertInstanceOf(MethodArgumentNotValidException.class,\r\n                        result.getResolvedException()));\r\n    }\r\n\r\n    @Test\r\n    @DisplayName(\"Return incorrect exception\")\r\n    @SneakyThrows\r\n    void inCorrectException() {\r\n        var loanStatementRequestDto = String.format(getLoanStatementRequest(), \"\\\"Alexandr\\\"\", \"\\\"bala-bala\\\"\", \"\\\"1992-05-21\\\"\");\r\n\r\n        mockMvc.perform(post(\"/calculator/offers\")\r\n                        .contentType(MediaType.APPLICATION_JSON)\r\n                        .content(loanStatementRequestDto))\r\n\r\n                .andExpect(status().isBadRequest())\r\n                .andExpect(result -> assertNotEquals(ClassCastException.class,\r\n                        result.getResolvedException()));\r\n    }\r\n\r\n    @Test\r\n    @DisplayName(\"Correct MIME type application/json\")\r\n    @SneakyThrows\r\n    void correctMIMEType() {\r\n        var loanStatementRequestDto = String.format(getLoanStatementRequest(), \"\\\"Alexandr\\\"\", \"\\\"sasha@mail.com\\\"\", \"\\\"1992-05-21\\\"\");\r\n\r\n        var result = mockMvc.perform(post(\"/calculator/offers\")\r\n                        .contentType(MediaType.APPLICATION_JSON)\r\n                        .content(loanStatementRequestDto))\r\n\r\n                .andExpect(status().isOk())\r\n                .andReturn();\r\n\r\n        assertEquals(\"application/json\", result.getResponse().getContentType());\r\n    }\r\n\r\n    @Test\r\n    @DisplayName(\"Correct default validate message on @IsLatin\")\r\n    @SneakyThrows\r\n    void checkingValidateMessageInIsLatinAnnotation() {\r\n        var loanStatementRequestDto = String.format(getLoanStatementRequest(), \"\\\"Александр\\\"\", \"\\\"sasha@mail.com\\\"\", \"\\\"1992-05-21\\\"\");\r\n\r\n        mockMvc.perform(post(\"/calculator/offers\")\r\n                        .contentType(MediaType.APPLICATION_JSON)\r\n                        .content(loanStatementRequestDto))\r\n\r\n                .andExpect(status().isBadRequest())\r\n                .andExpect(jsonPath(\"$.errors.firstName\")\r\n                        .value(\"Your first/middle/last name must be only latin\"));\r\n    }\r\n\r\n    @Test\r\n    @DisplayName(\"Correct default validate message on @Adult\")\r\n    @SneakyThrows\r\n    void checkingValidateMessageInAdultAnnotation() {\r\n        var loanStatementRequestDto = String.format(getLoanStatementRequest(),\r\n                \"\\\"Alexandr\\\"\", \"\\\"sasha@mail.com\\\"\", \"\\\"2020-01-30\\\"\");\r\n\r\n        mockMvc.perform(post(\"/calculator/offers\")\r\n                        .contentType(MediaType.APPLICATION_JSON)\r\n                        .content(loanStatementRequestDto))\r\n\r\n                .andExpect(status().isBadRequest())\r\n                .andExpect(jsonPath(\"$.errors.birthdate\")\r\n                        .value(\"Your age is less than 18 years old\"));\r\n    }\r\n\r\n    @Test\r\n    @DisplayName(\"When send valid data is OK \")\r\n    @SneakyThrows\r\n    void checkOffer() {\r\n        var scoringDataDto = getScoringDataDto();\r\n\r\n        mockMvc.perform(post(\"/calculator/calc\")\r\n                        .contentType(MediaType.APPLICATION_JSON)\r\n                        .content(scoringDataDto))\r\n\r\n                .andExpect(status().isOk());\r\n    }\r\n\r\n    @Test\r\n    @DisplayName(\"Correct exception message when reject \")\r\n    @SneakyThrows\r\n    void checkExceptionMessage() {\r\n        when(calculatorService.scoreData(any())).thenThrow(TooLittleSalaryException.class);\r\n\r\n        mockMvc.perform(post(\"/calculator/calc\")\r\n                        .contentType(MediaType.APPLICATION_JSON)\r\n                        .content(getScoringDataDto()))\r\n\r\n                .andExpect(status().isBadRequest())\r\n                .andExpect(jsonPath(\"$.message\").value(\"Sorry, you were refused a loan\"));\r\n\r\n    }\r\n\r\n//    @Test\r\n//    @DisplayName(\"@IsLatin is receive null value\")\r\n//    @SneakyThrows\r\n//    void checkingAnnotationIsLatinOnNull() {\r\n//        ObjectMapper objectMapper = new ObjectMapper();\r\n//        var loanStatementRequestDto = String.format(getLoanStatementRequest(),\r\n//                \"\\\"Alexandr\\\"\", \"\\\"sasha@mail.com\\\"\", \"\\\"1992-05-21\\\"\");\r\n//        var loanStatementRequestDtoFromMapper = objectMapper.readValue(loanStatementRequestDto, LoanStatementRequestDto.class);\r\n//        loanStatementRequestDtoFromMapper.setMiddleName(null);\r\n//\r\n//\r\n//        mockMvc.perform(post(\"/calculator/offers\")\r\n//                .contentType(MediaType.APPLICATION_JSON)\r\n//                .content(objectMapper.writeValueAsString(loanStatementRequestDtoFromMapper)))\r\n//\r\n//            .andExpect(status().isOk());\r\n//    }\r\n\r\n    private String getLoanStatementRequest() {\r\n        return \"\"\"\r\n                {\r\n                  \"amount\": 300000.00,\r\n                  \"term\": 6,\r\n                  \"firstName\": %s,\r\n                  \"lastName\": \"Sergeev\",\r\n                  \"email\": %s,\r\n                  \"birthdate\": %s,\r\n                  \"passportSeries\": \"4456\",\r\n                  \"passportNumber\": \"346894\"\r\n                }\r\n                \"\"\";\r\n    }\r\n\r\n    private String getScoringDataDto() {\r\n        return \"\"\"\r\n                {\r\n                  \"amount\": 300000.00,\r\n                  \"term\": 6,\r\n                  \"firstName\": \"Aleksandr\",\r\n                  \"lastName\": \"Sergeev\",\r\n                  \"middleName\": \"Yurievich\",\r\n                  \"gender\": \"MALE\",\r\n                  \"birthdate\": \"1990-05-28\",\r\n                  \"passportSeries\": \"3546\",\r\n                  \"passportNumber\": \"409672\",\r\n                  \"passportIssueDate\": \"2020-11-10\",\r\n                  \"passportIssueBranch\": \"String\",\r\n                  \"maritalStatus\": \"MARRIED\",\r\n                  \"dependentAmount\": 30000.00,\r\n                  \"employment\": {\r\n                        \"employmentStatus\": \"EMPLOYEE\",\r\n                        \"employerINN\": \"396829604\",\r\n                        \"salary\": 95000.00,\r\n                        \"position\": \"SIMPLE_MANAGER\",\r\n                        \"workExperienceTotal\": 50,\r\n                        \"workExperienceCurrent\": 10\r\n                },\r\n                  \"accountNumber\": \"13456\",\r\n                  \"isInsuranceEnabled\": true,\r\n                  \"isSalaryClient\": false\r\n                }\r\n                \"\"\";\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ms-calc/src/test/java/ru/alex/mscalc/web/api/CalculatorControllerTest.java b/ms-calc/src/test/java/ru/alex/mscalc/web/api/CalculatorControllerTest.java
--- a/ms-calc/src/test/java/ru/alex/mscalc/web/api/CalculatorControllerTest.java	
+++ b/ms-calc/src/test/java/ru/alex/mscalc/web/api/CalculatorControllerTest.java	
@@ -178,24 +178,6 @@
 
     }
 
-//    @Test
-//    @DisplayName("@IsLatin is receive null value")
-//    @SneakyThrows
-//    void checkingAnnotationIsLatinOnNull() {
-//        ObjectMapper objectMapper = new ObjectMapper();
-//        var loanStatementRequestDto = String.format(getLoanStatementRequest(),
-//                "\"Alexandr\"", "\"sasha@mail.com\"", "\"1992-05-21\"");
-//        var loanStatementRequestDtoFromMapper = objectMapper.readValue(loanStatementRequestDto, LoanStatementRequestDto.class);
-//        loanStatementRequestDtoFromMapper.setMiddleName(null);
-//
-//
-//        mockMvc.perform(post("/calculator/offers")
-//                .contentType(MediaType.APPLICATION_JSON)
-//                .content(objectMapper.writeValueAsString(loanStatementRequestDtoFromMapper)))
-//
-//            .andExpect(status().isOk());
-//    }
-
     private String getLoanStatementRequest() {
         return """
                 {
@@ -228,7 +210,7 @@
                   "maritalStatus": "MARRIED",
                   "dependentAmount": 30000.00,
                   "employment": {
-                        "employmentStatus": "EMPLOYEE",
+                        "employmentStatus": "EMPLOYED",
                         "employerINN": "396829604",
                         "salary": 95000.00,
                         "position": "SIMPLE_MANAGER",
Index: ms-calc/src/main/java/ru/alex/mscalc/controller/CalculatorController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package ru.alex.mscalc.controller;\r\n\r\nimport java.util.List;\r\nimport lombok.RequiredArgsConstructor;\r\nimport org.springframework.http.HttpStatus;\r\nimport org.springframework.http.ResponseEntity;\r\nimport org.springframework.web.bind.annotation.RequestMapping;\r\nimport org.springframework.web.bind.annotation.RestController;\r\nimport ru.alex.mscalc.api.CalculatorApi;\r\nimport ru.alex.mscalc.dto.CreditDto;\r\nimport ru.alex.mscalc.dto.LoanOfferDto;\r\nimport ru.alex.mscalc.dto.LoanStatementRequestDto;\r\nimport ru.alex.mscalc.dto.ScoringDataDto;\r\nimport ru.alex.mscalc.service.CalculatorService;\r\n\r\n\r\n@RequiredArgsConstructor\r\n@RestController\r\n@RequestMapping(\"calculator\")\r\npublic class CalculatorController implements CalculatorApi {\r\n\r\n    private final CalculatorService calculatorService;\r\n\r\n    @Override\r\n    public ResponseEntity<List<LoanOfferDto>> offer(LoanStatementRequestDto loanStatementRequestDto) {\r\n        return ResponseEntity.status(HttpStatus.OK)\r\n            .body(calculatorService.offer(loanStatementRequestDto));\r\n    }\r\n\r\n    @Override\r\n    public ResponseEntity<CreditDto> scoreData(ScoringDataDto scoringDataDto) {\r\n        return ResponseEntity.status(HttpStatus.OK)\r\n            .body(calculatorService.scoreData(scoringDataDto));\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ms-calc/src/main/java/ru/alex/mscalc/controller/CalculatorController.java b/ms-calc/src/main/java/ru/alex/mscalc/controller/CalculatorController.java
--- a/ms-calc/src/main/java/ru/alex/mscalc/controller/CalculatorController.java	
+++ b/ms-calc/src/main/java/ru/alex/mscalc/controller/CalculatorController.java	
@@ -16,7 +16,6 @@
 
 @RequiredArgsConstructor
 @RestController
-@RequestMapping("calculator")
 public class CalculatorController implements CalculatorApi {
 
     private final CalculatorService calculatorService;
Index: ms-calc/src/test/java/ru/alex/MsCalcApplicationTests.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package ru.alex;\r\n\r\nimport lombok.SneakyThrows;\r\nimport org.junit.jupiter.api.DisplayName;\r\nimport org.junit.jupiter.api.Test;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;\r\nimport org.springframework.boot.test.context.SpringBootTest;\r\nimport org.springframework.http.MediaType;\r\nimport org.springframework.test.web.servlet.MockMvc;\r\nimport org.springframework.test.web.servlet.MvcResult;\r\nimport org.springframework.test.web.servlet.result.MockMvcResultHandlers;\r\nimport org.springframework.web.bind.MethodArgumentNotValidException;\r\nimport ru.alex.mscalc.service.CalculatorService;\r\nimport static org.junit.jupiter.api.Assertions.assertInstanceOf;\r\nimport static org.junit.jupiter.api.Assertions.assertNotEquals;\r\nimport static org.springframework.boot.test.context.SpringBootTest.WebEnvironment.RANDOM_PORT;\r\nimport static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;\r\nimport static org.springframework.test.web.servlet.result.MockMvcResultMatchers.jsonPath;\r\nimport static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;\r\n\r\n\r\n@SpringBootTest(webEnvironment = RANDOM_PORT)\r\n@AutoConfigureMockMvc\r\nclass MsCalcApplicationTests {\r\n\r\n    @Autowired\r\n    CalculatorService calculatorService;\r\n\r\n    @Autowired\r\n    MockMvc mockMvc;\r\n\r\n    @Test\r\n    @DisplayName(\"Checking endpoint /calculator/offers\")\r\n    @SneakyThrows\r\n    void correctDataSize() {\r\n        var loanStatementRequestDto = String.format(loanStatementRequest(), \"\\\"Alexandr\\\"\", \"\\\"sasha@mail.com\\\"\");\r\n\r\n        mockMvc.perform(post(\"/calculator/offers\")\r\n                .contentType(MediaType.APPLICATION_JSON)\r\n                .content(loanStatementRequestDto))\r\n\r\n            .andExpect(status().isOk())\r\n            .andExpect(jsonPath(\"$.length()\").value(4));\r\n    }\r\n\r\n    @Test\r\n    @DisplayName(\"Return correct exception\")\r\n    @SneakyThrows\r\n    void correctException() {\r\n        var loanStatementRequestDto = String.format(loanStatementRequest(), \"\\\"Александр\\\"\", \"\\\"2ref4511\\\"\");\r\n\r\n        mockMvc.perform(post(\"/calculator/offers\")\r\n                .contentType(MediaType.APPLICATION_JSON)\r\n                .content(loanStatementRequestDto))\r\n\r\n            .andExpect(status().isBadRequest())\r\n            .andExpect(result -> assertInstanceOf(MethodArgumentNotValidException.class,\r\n                result.getResolvedException()));\r\n    }\r\n\r\n    @Test\r\n    @DisplayName(\"Return incorrect exception\")\r\n    @SneakyThrows\r\n    void inCorrectException() {\r\n        var loanStatementRequestDto = String.format(loanStatementRequest(), \"\\\"Александр\\\"\", \"\\\"2ref4511\\\"\");\r\n\r\n        mockMvc.perform(post(\"/calculator/offers\")\r\n                .contentType(MediaType.APPLICATION_JSON)\r\n                .content(loanStatementRequestDto))\r\n\r\n            .andExpect(status().isBadRequest())\r\n            .andExpect(result -> assertNotEquals(ClassCastException.class,\r\n                result.getResolvedException()));\r\n    }\r\n\r\n    @Test\r\n    @DisplayName(\"Checking endpoint /calculator/calc\")\r\n    @SneakyThrows\r\n    void correctResult() {\r\n        var term = 6;\r\n        var scoringData = String.format(scoringData(), term, \"\\\"Alexandr\\\"\");\r\n\r\n        mockMvc.perform(post(\"/calculator/calc\")\r\n                .contentType(MediaType.APPLICATION_JSON)\r\n                .content(scoringData))\r\n\r\n            .andExpect(status().isOk())\r\n            .andExpect(jsonPath(\"$.monthlyPayment\").value(51_764.52))\r\n            .andExpect(jsonPath(\"$.psk\").value(310_587.06))\r\n            .andExpect(jsonPath(\"$.rate\").value(12.00))\r\n            .andExpect(jsonPath(\"$.paymentSchedule.length()\").value(term))\r\n            .andDo(MockMvcResultHandlers.print());\r\n\r\n    }\r\n\r\n    private String loanStatementRequest() {\r\n        return \"\"\"\r\n            {\r\n              \"amount\": 300000.00,\r\n              \"term\": 6,\r\n              \"firstName\": %s,\r\n              \"lastName\": \"Sergeev\",\r\n              \"middleName\": \"Yurievich\",\r\n              \"email\": %s,\r\n              \"birthdate\": \"1992-05-21\",\r\n              \"passportSeries\": \"4456\",\r\n              \"passportNumber\": \"346894\"\r\n            }\r\n            \"\"\";\r\n    }\r\n\r\n    private String scoringData() {\r\n        return \"\"\"\r\n            {\r\n              \"amount\": 300000,\r\n              \"term\": %d,\r\n              \"firstName\": %s,\r\n              \"lastName\": \"Sergeev\",\r\n              \"middleName\": \"Yurievich\",\r\n              \"gender\": \"MALE\",\r\n              \"birthdate\": \"1992-07-31\",\r\n              \"passportSeries\": \"4561\",\r\n              \"passportNumber\": \"123456\",\r\n              \"passportIssueDate\": \"2020-04-01\",\r\n              \"passportIssueBranch\": \"OUFMS Russia\",\r\n              \"maritalStatus\": \"MARRIED\",\r\n              \"dependentAmount\": 3000,\r\n              \"employment\": {\r\n                 \"employmentStatus\": \"EMPLOYEE\",\r\n                 \"employerINN\": \"31565562234\",\r\n                 \"salary\": 95000,\r\n                 \"position\": \"TOP_MANAGER\",\r\n                 \"workExperienceTotal\": 50,\r\n                 \"workExperienceCurrent\": 27\r\n                },\r\n              \"accountNumber\": \"342263453245373\",\r\n              \"isInsuranceEnabled\": false,\r\n              \"isSalaryClient\": true\r\n            }\r\n            \"\"\";\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ms-calc/src/test/java/ru/alex/MsCalcApplicationTests.java b/ms-calc/src/test/java/ru/alex/MsCalcApplicationTests.java
--- a/ms-calc/src/test/java/ru/alex/MsCalcApplicationTests.java	
+++ b/ms-calc/src/test/java/ru/alex/MsCalcApplicationTests.java	
@@ -8,10 +8,8 @@
 import org.springframework.boot.test.context.SpringBootTest;
 import org.springframework.http.MediaType;
 import org.springframework.test.web.servlet.MockMvc;
-import org.springframework.test.web.servlet.MvcResult;
 import org.springframework.test.web.servlet.result.MockMvcResultHandlers;
 import org.springframework.web.bind.MethodArgumentNotValidException;
-import ru.alex.mscalc.service.CalculatorService;
 import static org.junit.jupiter.api.Assertions.assertInstanceOf;
 import static org.junit.jupiter.api.Assertions.assertNotEquals;
 import static org.springframework.boot.test.context.SpringBootTest.WebEnvironment.RANDOM_PORT;
@@ -24,9 +22,6 @@
 @AutoConfigureMockMvc
 class MsCalcApplicationTests {
 
-    @Autowired
-    CalculatorService calculatorService;
-
     @Autowired
     MockMvc mockMvc;
 
@@ -127,7 +122,7 @@
               "maritalStatus": "MARRIED",
               "dependentAmount": 3000,
               "employment": {
-                 "employmentStatus": "EMPLOYEE",
+                 "employmentStatus": "EMPLOYED",
                  "employerINN": "31565562234",
                  "salary": 95000,
                  "position": "TOP_MANAGER",
Index: ms-calc/src/test/java/ru/alex/mscalc/service/CalculatorServiceTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package ru.alex.mscalc.service;\r\n\r\nimport java.math.BigDecimal;\r\nimport java.time.LocalDate;\r\nimport java.util.List;\r\nimport java.util.stream.Stream;\r\nimport org.junit.jupiter.api.BeforeEach;\r\nimport org.junit.jupiter.api.DisplayName;\r\nimport org.junit.jupiter.api.Test;\r\nimport org.junit.jupiter.api.extension.ExtendWith;\r\nimport org.junit.jupiter.params.ParameterizedTest;\r\nimport org.junit.jupiter.params.provider.Arguments;\r\nimport org.junit.jupiter.params.provider.CsvSource;\r\nimport org.junit.jupiter.params.provider.MethodSource;\r\nimport org.mockito.junit.jupiter.MockitoExtension;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.test.context.ContextConfiguration;\r\nimport org.springframework.test.context.TestPropertySource;\r\nimport org.springframework.test.context.junit.jupiter.SpringExtension;\r\nimport ru.alex.mscalc.entity.constant.EmploymentStatus;\r\nimport ru.alex.mscalc.entity.constant.Gender;\r\nimport ru.alex.mscalc.entity.constant.MaritalStatus;\r\nimport ru.alex.mscalc.entity.constant.Position;\r\nimport ru.alex.mscalc.dto.EmploymentDto;\r\nimport ru.alex.mscalc.dto.LoanStatementRequestDto;\r\nimport ru.alex.mscalc.dto.ScoringDataDto;\r\nimport static org.junit.jupiter.api.Assertions.assertDoesNotThrow;\r\nimport static org.junit.jupiter.api.Assertions.assertEquals;\r\n\r\n\r\n@ExtendWith({ SpringExtension.class, MockitoExtension.class })\r\n@TestPropertySource(locations = \"classpath:application-test.properties\")\r\n@ContextConfiguration(classes = { CalculatorService.class, EmploymentService.class, ClientService.class })\r\nclass CalculatorServiceTest {\r\n\r\n    @Autowired\r\n    CalculatorService calculatorService;\r\n\r\n    private ScoringDataDto scoringDataDto;\r\n    private LoanStatementRequestDto loanStatementRequestDto;\r\n\r\n    @BeforeEach\r\n    void setup() {\r\n        scoringDataDto = getScoringDataDto();\r\n        loanStatementRequestDto = getLoanStatementRequestDto();\r\n    }\r\n\r\n    @Test\r\n    @DisplayName(\"When data is correct - success\")\r\n    void success() {\r\n        var loanStatementRequest = getLoanStatementRequestDto();\r\n\r\n        assertDoesNotThrow(() -> calculatorService.offer(loanStatementRequest));\r\n    }\r\n\r\n    @Test\r\n    @DisplayName(\"Expected list size - success\")\r\n    void correctSize() {\r\n        var expected = 4;\r\n\r\n        var result = calculatorService.offer(loanStatementRequestDto);\r\n\r\n        assertEquals(expected, result.size());\r\n    }\r\n\r\n    @Test\r\n    @DisplayName(\"Check valid rate in offer\")\r\n    void checkRate() {\r\n        var finalRate = List.of(BigDecimal.valueOf(15.00).setScale(2), BigDecimal.valueOf(13.00).setScale(2),\r\n            BigDecimal.valueOf(12.00).setScale(2), BigDecimal.valueOf(10.00).setScale(2));\r\n\r\n        var result = calculatorService.offer(loanStatementRequestDto)\r\n            .stream()\r\n            .map(loanOfferDto -> loanOfferDto.getRate().setScale(2))\r\n            .toList();\r\n\r\n        assertEquals(finalRate, result, \"\");\r\n    }\r\n\r\n    @ParameterizedTest\r\n    @MethodSource(\"createValueForCheckMonthlyPayment\")\r\n    @DisplayName(\"Check monthly payment - success\")\r\n    void checkMonthlyPayment(Integer term, List<BigDecimal> expectedMonthlyPayment) {\r\n        loanStatementRequestDto.setTerm(term);\r\n\r\n        var result = calculatorService.offer(loanStatementRequestDto)\r\n            .stream()\r\n            .map(loanOfferDto -> loanOfferDto.getMonthlyPayment().setScale(2))\r\n            .toList();\r\n\r\n        assertEquals(expectedMonthlyPayment, result);\r\n    }\r\n\r\n    @Test\r\n    @DisplayName(\"Method execution\")\r\n    void check() {\r\n        var scoringDataDto = getScoringDataDto();\r\n\r\n        assertDoesNotThrow(() -> calculatorService.scoreData(scoringDataDto));\r\n    }\r\n\r\n    @Test\r\n    @DisplayName(\"When data is valid payment schedule size equals term\")\r\n    void checkEqualsEmploymentSchedule() {\r\n        var expect = scoringDataDto.getTerm();\r\n\r\n        var result = calculatorService.scoreData(scoringDataDto).getPaymentSchedule().size();\r\n\r\n        assertEquals(expect, result);\r\n    }\r\n\r\n    @Test\r\n    @DisplayName(\"When data is valid monthly payment correct\")\r\n    void checkValidMonthlyPayment() {\r\n        var expect = BigDecimal.valueOf(52_777.72);\r\n\r\n        var result = calculatorService.scoreData(scoringDataDto).getMonthlyPayment();\r\n\r\n        assertEquals(expect, result);\r\n    }\r\n\r\n    @Test\r\n    @DisplayName(\"When data is valid rate is correct\")\r\n    void checkFinalRate() {\r\n        var expect = BigDecimal.valueOf(11.00).setScale(2);\r\n\r\n        var result = calculatorService.scoreData(scoringDataDto).getRate();\r\n\r\n        assertEquals(expect, result);\r\n    }\r\n\r\n    @Test\r\n    @DisplayName(\"Correct rate when client marital status WIDOWED\")\r\n    void checkRateByMaritalStatusWidowed() {\r\n        scoringDataDto.setMaritalStatus(MaritalStatus.WIDOWED);\r\n        var expect = BigDecimal.valueOf(12.00).setScale(2);\r\n\r\n        var result = calculatorService.scoreData(scoringDataDto).getRate();\r\n\r\n        assertEquals(expect, result);\r\n    }\r\n\r\n    @Test\r\n    @DisplayName(\"Correct rate when client marital status SINGLE\")\r\n    void checkRateByMaritalStatusSingle() {\r\n        scoringDataDto.setMaritalStatus(MaritalStatus.SINGLE);\r\n        var expect = BigDecimal.valueOf(15.00).setScale(2);\r\n\r\n        var result = calculatorService.scoreData(scoringDataDto).getRate();\r\n\r\n        assertEquals(expect, result);\r\n    }\r\n\r\n    @Test\r\n    @DisplayName(\"Correct rate when client gender TRANSGENDER\")\r\n    void checkRateByGenderTransgender() {\r\n        scoringDataDto.setGender(Gender.TRANSGENDER);\r\n        var expect = BigDecimal.valueOf(22.65).setScale(2);\r\n\r\n        var result = calculatorService.scoreData(scoringDataDto).getRate();\r\n\r\n        assertEquals(expect, result);\r\n    }\r\n\r\n    @Test\r\n    @DisplayName(\"Correct rate when client gender FEMALE\")\r\n    void checkRateByGenderFemale() {\r\n        scoringDataDto.setGender(Gender.FEMALE);\r\n        var expect = BigDecimal.valueOf(12.00).setScale(2);\r\n\r\n        var result = calculatorService.scoreData(scoringDataDto).getRate();\r\n\r\n        assertEquals(expect, result);\r\n    }\r\n\r\n    @Test\r\n    @DisplayName(\"Correct rate when client under 32 y.o.\")\r\n    void checkRateByBirthDate() {\r\n        scoringDataDto.setBirthdate(LocalDate.of(2000, 2, 4));\r\n        var expect = BigDecimal.valueOf(12.25).setScale(2);\r\n\r\n        var result = calculatorService.scoreData(scoringDataDto).getRate();\r\n\r\n        assertEquals(expect, result);\r\n    }\r\n\r\n    @Test\r\n    @DisplayName(\"Correct rate when client gender FEMALE and age under 32 y.o.\")\r\n    void checkRateByGenderFemaleAndBirthdate() {\r\n        scoringDataDto.setBirthdate(LocalDate.of(2000, 2, 4));\r\n        scoringDataDto.setGender(Gender.FEMALE);\r\n        var expect = BigDecimal.valueOf(12.00).setScale(2);\r\n\r\n        var result = calculatorService.scoreData(scoringDataDto).getRate();\r\n\r\n        assertEquals(expect, result);\r\n    }\r\n\r\n    @ParameterizedTest\r\n    @DisplayName(\"Correct rate when client gender FEMALE and age between 32 and 60 y.o.\")\r\n    @CsvSource(value = {\r\n        \"11.00, 1990-02-04\",\r\n        \"11.00, 1980-03-04\",\r\n        \"11.00, 1970-02-26\"\r\n    }, delimiter = ',')\r\n    void checkBetweenRateByGenderFemaleAndBirthdate(BigDecimal expect, LocalDate birthdate) {\r\n        scoringDataDto.setBirthdate(birthdate);\r\n        scoringDataDto.setGender(Gender.FEMALE);\r\n\r\n        var result = calculatorService.scoreData(scoringDataDto).getRate();\r\n\r\n        assertEquals(expect, result);\r\n    }\r\n\r\n    @ParameterizedTest\r\n    @DisplayName(\"Correct rate when client gender MALE and age between 30 and 55 y.o.\")\r\n    @CsvSource(value = {\r\n        \"11.00, 1990-02-04\",\r\n        \"11.00, 1980-03-04\",\r\n        \"11.00, 1970-02-26\"\r\n    }, delimiter = ',')\r\n    void checkRateByGenderMaleAndBirthdate(BigDecimal expect, LocalDate birthdate) {\r\n        scoringDataDto.setBirthdate(birthdate);\r\n        scoringDataDto.setGender(Gender.MALE);\r\n\r\n        var result = calculatorService.scoreData(scoringDataDto).getRate();\r\n\r\n        assertEquals(expect, result);\r\n    }\r\n\r\n    static Stream<Arguments> createValueForCheckMonthlyPayment() {\r\n        return Stream.of(\r\n            Arguments.of(6, List.of(BigDecimal.valueOf(52_210.14), BigDecimal.valueOf(51_912.87), BigDecimal.valueOf(52_929.22), BigDecimal.valueOf(52_626.46))),\r\n            Arguments.of(9, List.of(BigDecimal.valueOf(35_451.18), BigDecimal.valueOf(35_164.83), BigDecimal.valueOf(35_810.12), BigDecimal.valueOf(35_519.20).setScale(2))),\r\n            Arguments.of(12, List.of(BigDecimal.valueOf(27_077.49), BigDecimal.valueOf(26_795.18), BigDecimal.valueOf(27_254.37), BigDecimal.valueOf(26_968.20).setScale(2))));\r\n\r\n    }\r\n\r\n    private LoanStatementRequestDto getLoanStatementRequestDto() {\r\n        return LoanStatementRequestDto.builder()\r\n            .amount(BigDecimal.valueOf(300_000))\r\n            .term(6)\r\n            .firstName(\"Alexandr\")\r\n            .lastName(\"Sergeev\")\r\n            .middleName(\"Yurievich\")\r\n            .email(\"sasha@mail.com\")\r\n            .birthdate(LocalDate.of(1995, 12, 31))\r\n            .passportSeries(\"4563\")\r\n            .passportNumber(\"305812\")\r\n            .build();\r\n    }\r\n\r\n    private ScoringDataDto getScoringDataDto() {\r\n        return ScoringDataDto.builder()\r\n            .amount(BigDecimal.valueOf(300_000))\r\n            .term(6)\r\n            .firstName(\"Alexandr\")\r\n            .lastName(\"Sergeev\")\r\n            .middleName(\"Yurievich\")\r\n            .gender(Gender.MALE)\r\n            .birthdate(LocalDate.of(1992, 7, 31))\r\n            .passportSeries(\"4563\")\r\n            .passportNumber(\"305812\")\r\n            .passportIssueDate(LocalDate.of(2010, 2, 19))\r\n            .passportIssueBranch(\"OUFMS Russia\")\r\n            .dependentAmount(3_000)\r\n            .maritalStatus(MaritalStatus.MARRIED)\r\n            .employment(EmploymentDto.builder()\r\n                .employmentStatus(EmploymentStatus.EMPLOYEE)\r\n                .employerINN(\"496185400491\")\r\n                .salary(BigDecimal.valueOf(95_000))\r\n                .workExperienceTotal(60)\r\n                .workExperienceCurrent(18)\r\n                .position(Position.TOP_MANAGER)\r\n                .build())\r\n            .account(\"559293560734\")\r\n            .isInsuranceEnabled(true)\r\n            .isSalaryClient(false)\r\n            .build();\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ms-calc/src/test/java/ru/alex/mscalc/service/CalculatorServiceTest.java b/ms-calc/src/test/java/ru/alex/mscalc/service/CalculatorServiceTest.java
--- a/ms-calc/src/test/java/ru/alex/mscalc/service/CalculatorServiceTest.java	
+++ b/ms-calc/src/test/java/ru/alex/mscalc/service/CalculatorServiceTest.java	
@@ -266,7 +266,7 @@
             .dependentAmount(3_000)
             .maritalStatus(MaritalStatus.MARRIED)
             .employment(EmploymentDto.builder()
-                .employmentStatus(EmploymentStatus.EMPLOYEE)
+                .employmentStatus(EmploymentStatus.EMPLOYED)
                 .employerINN("496185400491")
                 .salary(BigDecimal.valueOf(95_000))
                 .workExperienceTotal(60)
Index: bank-app.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<module type=\"GENERAL_MODULE\" version=\"4\">\r\n  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\r\n    <exclude-output />\r\n    <content url=\"file://$MODULE_DIR$\" />\r\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\r\n  </component>\r\n</module>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/bank-app.iml b/bank-app.iml
--- a/bank-app.iml	
+++ b/bank-app.iml	
@@ -3,6 +3,7 @@
   <component name="NewModuleRootManager" inherit-compiler-output="true">
     <exclude-output />
     <content url="file://$MODULE_DIR$" />
+    <orderEntry type="jdk" jdkName="17" jdkType="JavaSDK" />
     <orderEntry type="sourceFolder" forTests="false" />
   </component>
 </module>
\ No newline at end of file
Index: ms-calc/src/test/java/ru/alex/mscalc/service/EmploymentServiceTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package ru.alex.mscalc.service;\r\n\r\nimport java.math.BigDecimal;\r\nimport org.junit.jupiter.api.BeforeEach;\r\nimport org.junit.jupiter.api.DisplayName;\r\nimport org.junit.jupiter.api.Test;\r\nimport org.junit.jupiter.api.extension.ExtendWith;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.beans.factory.annotation.Value;\r\nimport org.springframework.test.context.ContextConfiguration;\r\nimport org.springframework.test.context.TestPropertySource;\r\nimport org.springframework.test.context.junit.jupiter.SpringExtension;\r\nimport ru.alex.mscalc.entity.constant.EmploymentStatus;\r\nimport ru.alex.mscalc.entity.constant.Position;\r\nimport ru.alex.mscalc.exception.CurrentWorkExperienceException;\r\nimport ru.alex.mscalc.exception.TooLittleSalaryException;\r\nimport ru.alex.mscalc.exception.TotalWorkExperienceException;\r\nimport ru.alex.mscalc.exception.UnemployedException;\r\nimport ru.alex.mscalc.dto.EmploymentDto;\r\nimport static org.junit.jupiter.api.Assertions.assertEquals;\r\nimport static org.junit.jupiter.api.Assertions.assertThrows;\r\n\r\n\r\n@ExtendWith(SpringExtension.class)\r\n@TestPropertySource(locations = \"classpath:application-test.properties\")\r\n@ContextConfiguration(classes = EmploymentService.class)\r\nclass EmploymentServiceTest {\r\n\r\n    @Value(\"${app.main-rate}\")\r\n    BigDecimal mainRate;\r\n\r\n    @Autowired\r\n    EmploymentService employmentService;\r\n\r\n    private EmploymentDto employmentDto;\r\n    private BigDecimal amount;\r\n\r\n    @BeforeEach\r\n    void setup() {\r\n        employmentDto = getEmploymentDtoTemplate();\r\n        amount = BigDecimal.valueOf(300_000);\r\n    }\r\n\r\n    @Test\r\n    @DisplayName(\"Correct result on calculate rate by Employment\")\r\n    void correctResult() {\r\n        var amount = BigDecimal.valueOf(300_000);\r\n        var expected = BigDecimal.valueOf(20.00);\r\n\r\n        var actual = employmentService.calculateRateByEmployment(employmentDto, amount, mainRate);\r\n\r\n        assertEquals(expected, actual);\r\n    }\r\n\r\n    @Test\r\n    @DisplayName(\"When client position is CEO correct result\")\r\n    void clientCEO() {\r\n        var expected = BigDecimal.valueOf(22.50);\r\n        employmentDto.setPosition(Position.CEO);\r\n\r\n        var actual = employmentService.calculateRateByEmployment(employmentDto, amount, mainRate);\r\n\r\n        assertEquals(expected, actual);\r\n    }\r\n\r\n    @Test\r\n    @DisplayName(\"When client position is CFO correct result\")\r\n    void clientCFO() {\r\n        var expected = BigDecimal.valueOf(21.00);\r\n        employmentDto.setPosition(Position.CFO);\r\n\r\n        var actual = employmentService.calculateRateByEmployment(employmentDto, amount, mainRate);\r\n\r\n        assertEquals(expected, actual);\r\n    }\r\n\r\n    @Test\r\n    @DisplayName(\"When client position is ADMINISTRATOR correct result\")\r\n    void clientAdministrator() {\r\n        var expected = BigDecimal.valueOf(18.50);\r\n        employmentDto.setPosition(Position.ADMINISTRATOR);\r\n\r\n        var actual = employmentService.calculateRateByEmployment(employmentDto, amount, mainRate);\r\n\r\n        assertEquals(expected, actual);\r\n    }\r\n\r\n    @Test\r\n    @DisplayName(\"When client position is SIMPLE_MANAGER correct result\")\r\n    void clientSimpleManager() {\r\n        var expected = BigDecimal.valueOf(18.00);\r\n        employmentDto.setPosition(Position.SIMPLE_MANAGER);\r\n\r\n        var actual = employmentService.calculateRateByEmployment(employmentDto, amount, mainRate);\r\n\r\n        assertEquals(expected, actual);\r\n    }\r\n\r\n    @Test\r\n    @DisplayName(\"When client status is WORKER correct result\")\r\n    void clientStatusWorker() {\r\n        var expected = BigDecimal.valueOf(19.00);\r\n        employmentDto.setEmploymentStatus(EmploymentStatus.WORKER);\r\n\r\n        var actual = employmentService.calculateRateByEmployment(employmentDto, amount, mainRate);\r\n\r\n        assertEquals(expected, actual);\r\n    }\r\n\r\n    @Test\r\n    @DisplayName(\"When client status is WORKER correct result\")\r\n    void clientStatusSelfEmployed() {\r\n        var expected = BigDecimal.valueOf(18.50);\r\n        employmentDto.setEmploymentStatus(EmploymentStatus.SELF_EMPLOYED);\r\n\r\n        var actual = employmentService.calculateRateByEmployment(employmentDto, amount, mainRate);\r\n\r\n        assertEquals(expected, actual);\r\n    }\r\n\r\n    @Test\r\n    @DisplayName(\"When status UNEMPLOYED throw: UnemployedException\")\r\n    void throwUnemployedException() {\r\n        employmentDto.setEmploymentStatus(EmploymentStatus.UNEMPLOYED);\r\n\r\n        assertThrows(UnemployedException.class,\r\n            () -> employmentService.calculateRateByEmployment(employmentDto, amount, mainRate));\r\n    }\r\n\r\n    @Test\r\n    @DisplayName(\"When total working experience less than 18 month throw: TotalWorkExperienceException\")\r\n    void throwTotalWorkExperienceException() {\r\n        employmentDto.setWorkExperienceTotal(17);\r\n\r\n        assertThrows(TotalWorkExperienceException.class,\r\n            () -> employmentService.calculateRateByEmployment(employmentDto, amount, mainRate));\r\n    }\r\n\r\n    @Test\r\n    @DisplayName(\"When current working experience less than 3 month throw: CurrentWorkExperienceException\")\r\n    void throwCurrentWorkExperienceException() {\r\n        var amount = BigDecimal.valueOf(300_000);\r\n        employmentDto.setWorkExperienceCurrent(2);\r\n\r\n        assertThrows(CurrentWorkExperienceException.class,\r\n            () -> employmentService.calculateRateByEmployment(employmentDto, amount, mainRate));\r\n    }\r\n\r\n    @Test\r\n    @DisplayName(\"When salary too little throw: TooLittleSalaryException\")\r\n    void throwTooLittleSalaryException() {\r\n        var amount = BigDecimal.valueOf(300_000);\r\n        employmentDto.setSalary(BigDecimal.valueOf(10_000));\r\n\r\n        assertThrows(TooLittleSalaryException.class,\r\n            () -> employmentService.calculateRateByEmployment(employmentDto, amount, mainRate));\r\n    }\r\n\r\n\r\n    private EmploymentDto getEmploymentDtoTemplate() {\r\n        return EmploymentDto.builder()\r\n            .employerINN(\"456234523005\")\r\n            .employmentStatus(EmploymentStatus.EMPLOYEE)\r\n            .position(Position.TOP_MANAGER)\r\n            .workExperienceCurrent(20)\r\n            .workExperienceTotal(56)\r\n            .salary(BigDecimal.valueOf(95_000))\r\n            .build();\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ms-calc/src/test/java/ru/alex/mscalc/service/EmploymentServiceTest.java b/ms-calc/src/test/java/ru/alex/mscalc/service/EmploymentServiceTest.java
--- a/ms-calc/src/test/java/ru/alex/mscalc/service/EmploymentServiceTest.java	
+++ b/ms-calc/src/test/java/ru/alex/mscalc/service/EmploymentServiceTest.java	
@@ -160,7 +160,7 @@
     private EmploymentDto getEmploymentDtoTemplate() {
         return EmploymentDto.builder()
             .employerINN("456234523005")
-            .employmentStatus(EmploymentStatus.EMPLOYEE)
+            .employmentStatus(EmploymentStatus.EMPLOYED)
             .position(Position.TOP_MANAGER)
             .workExperienceCurrent(20)
             .workExperienceTotal(56)
